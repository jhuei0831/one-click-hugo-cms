[{"categories":["CODE"],"content":"使用MySQL完成Yii2 app basic專案登入範例","date":"2023-01-08","objectID":"/yii2-basic-auth-login/","series":null,"tags":["php","yii","yii2","yii2-app-basic","auth","login"],"title":"Yii2 basic login auth with database","uri":"/yii2-basic-auth-login/"},{"categories":["CODE"],"content":" 使用MySQL完成Yii2 app basic專案登入範例 ","date":"2023-01-08","objectID":"/yii2-basic-auth-login/:0:0","series":null,"tags":["php","yii","yii2","yii2-app-basic","auth","login"],"title":"Yii2 basic login auth with database","uri":"/yii2-basic-auth-login/#"},{"categories":["CODE"],"content":"\r前言如果使用Yii2官方的basic範例，會發現在登入這一塊範例把帳號密碼hardcode在程式碼中，而沒有使用資料庫。 所以這篇將把資料庫方法加入basic專案，實現登入驗證。 ","date":"2023-01-08","objectID":"/yii2-basic-auth-login/:1:0","series":null,"tags":["php","yii","yii2","yii2-app-basic","auth","login"],"title":"Yii2 basic login auth with database","uri":"/yii2-basic-auth-login/#前言"},{"categories":["CODE"],"content":"\r建立使用者資料表本次介紹使用的資料庫是MySQL，以下使用migration方式建立users資料表。 php yii migrate/create create_users_table \u003c?php use yii\\db\\Migration; /** * Handles the creation of table `{{ %users }}`. */ class m230108_122442_create_users_table extends Migration { /** * {@inheritdoc} */ public function safeUp() { // create table $this-\u003ecreateTable('{{ %users }}', [ 'id' =\u003e $this-\u003eprimaryKey(), 'name' =\u003e $this-\u003estring(50)-\u003enotNull()-\u003ecomment('名稱'), 'email' =\u003e $this-\u003estring(50)-\u003enotNull()-\u003ecomment('電子郵件'), 'password' =\u003e $this-\u003estring(200)-\u003enotNull()-\u003ecomment('密碼'), 'auth_key' =\u003e $this-\u003estring(50)-\u003enotNull()-\u003ecomment('金鑰'), 'created_at' =\u003e $this-\u003edateTime()-\u003enotNull()-\u003edefaultExpression('CURRENT_TIMESTAMP')-\u003ecomment('建立時間'), 'updated_at' =\u003e $this-\u003edateTime()-\u003enull()-\u003eappend('ON UPDATE CURRENT_TIMESTAMP')-\u003ecomment('修改時間'), ]); // seed some default data Yii::$app-\u003edb-\u003ecreateCommand()-\u003ebatchInsert('users', ['name', 'email', 'password', 'auth_key'], [ [ 'admin', 'admin@example.com', Yii::$app-\u003egetSecurity()-\u003egeneratePasswordHash('admin'), Yii::$app-\u003egetSecurity()-\u003egenerateRandomString(), ], [ 'guest', 'guest@example.com', Yii::$app-\u003egetSecurity()-\u003egeneratePasswordHash('guest'), Yii::$app-\u003egetSecurity()-\u003egenerateRandomString(), ], ], )-\u003eexecute(); } /** * {@inheritdoc} */ public function safeDown() { $this-\u003edropTable('{{ %users }}'); } } 完成資料表建立: php yii migrate ","date":"2023-01-08","objectID":"/yii2-basic-auth-login/:2:0","series":null,"tags":["php","yii","yii2","yii2-app-basic","auth","login"],"title":"Yii2 basic login auth with database","uri":"/yii2-basic-auth-login/#建立使用者資料表"},{"categories":["CODE"],"content":"\r建立Users模型(model)基本上使用gii建立，在此就不贅述建立流程。 建立完成後一定要加入IdentityInterface介面，然後在模型底下加入幾個函式: findByUsername : 在 LoginForm 模型中找使用者資料用。 validatePassword : 驗證密碼。 findIdentity : 根據给到的ID查詢身分。 findIdentityByAccessToken : 根據 token 查詢身份。 getId : 取得使用者id。 getAuthKey : 當前用戶的（cookie）認證金鑰。 validateAuthKey : 驗證金鑰。 其中的 findIdentity、findIdentityByAccessToken、getId、getAuthKey及validateAuthKey都是IdentityInterface必須包含的函式。\r\u003c?php namespace app\\models; use Yii; use yii\\db\\ActiveRecord; use yii\\helpers\\VarDumper; use yii\\web\\IdentityInterface; use yii\\behaviors\\TimestampBehavior; /** * This is the model class for table \"users\". * * @property int $id * @property string $name * @property string $email * @property string $password * @property string $auth_key * @property datetime $created_at * @property datetime $updated_at */ class Users extends ActiveRecord implements IdentityInterface { /** * {@inheritdoc} */ public static function tableName() { return 'users'; } /** * {@inheritdoc} */ public function rules() { return [ [['name', 'email', 'password', 'auth_key'], 'required'], [['name', 'email', 'auth_key'], 'string', 'max' =\u003e 50], [['password'], 'string', 'max' =\u003e 200], [['email'], 'unique'], [['auth_key'], 'unique'], ]; } /** * {@inheritdoc} */ public function attributeLabels() { return [ 'id' =\u003e 'ID', 'name' =\u003e 'Name', 'email' =\u003e 'Email', 'password' =\u003e 'Password', 'auth_key' =\u003e 'auth_key', ]; } /** * 使用使用者名稱尋找帳號資料 * * @param string $username * @return static|null */ public static function findByUsername($username) { $user = static::findOne(['name' =\u003e $username]); if (isset($user)) { return $user; } return null; } /** * 驗證密碼 * * @param string $password password to validate * @return bool if password provided is valid for current user */ public function validatePassword($password) { return Yii::$app-\u003egetSecurity()-\u003evalidatePassword($password, $this-\u003epassword); } /** * 根據给到的ID查詢身分。 * * @param string|integer $id 被查詢的ID * @return IdentityInterface|null 通过ID比對到的身分對象 */ public static function findIdentity($id) { return static::findOne($id); } /** * 根據 token 查詢身份。 * * @param string $token 被查詢的 token * @return IdentityInterface|null 通過 token 得到的身分對象 */ public static function findIdentityByAccessToken($token, $type = null) { return static::findOne(['access_token' =\u003e $token]); } /** * @return int|string 當前用户ID */ public function getId() { return $this-\u003eid; } /** * @return string 當前用戶的（cookie）認證金鑰 */ public function getAuthKey() { return $this-\u003eauth_key; } /** * @param string $authKey * @return boolean if auth key is valid for current user */ public function validateAuthKey($authKey) { return $this-\u003egetAuthKey() === $authKey; } } ","date":"2023-01-08","objectID":"/yii2-basic-auth-login/:3:0","series":null,"tags":["php","yii","yii2","yii2-app-basic","auth","login"],"title":"Yii2 basic login auth with database","uri":"/yii2-basic-auth-login/#建立users模型model"},{"categories":["CODE"],"content":"\r修改LoginForm模型 \u003c?php namespace app\\models; use Yii; use yii\\base\\Model; /** * LoginForm is the model behind the login form. * * @property-read User|null $user * */ class LoginForm extends Model { public $username; public $password; public $rememberMe = true; private $_user = false; /** * @return array the validation rules. */ public function rules() { return [ // username and password are both required [['username', 'password'], 'required'], // rememberMe must be a boolean value ['rememberMe', 'boolean'], // password is validated by validatePassword() ['password', 'validatePassword'], ]; } /** * Validates the password. * This method serves as the inline validation for password. * * @param string $attribute the attribute currently being validated * @param array $params the additional name-value pairs given in the rule */ public function validatePassword($attribute, $params) { if (!$this-\u003ehasErrors()) { $user = $this-\u003egetUser(); if (!$user || !$user-\u003evalidatePassword($this-\u003epassword)) { $this-\u003eaddError($attribute, 'Incorrect username or password.'); } } } /** * Logs in a user using the provided username and password. * @return bool whether the user is logged in successfully */ public function login() { if ($this-\u003evalidate()) { return Yii::$app-\u003euser-\u003elogin($this-\u003egetUser(), $this-\u003erememberMe ? 3600*24*30 : 0); } return false; } /** * Finds user by [[username]] * * @return User|null */ public function getUser() { if ($this-\u003e_user === false) { $this-\u003e_user = Users::findByUsername($this-\u003eusername); } return $this-\u003e_user; } } ","date":"2023-01-08","objectID":"/yii2-basic-auth-login/:4:0","series":null,"tags":["php","yii","yii2","yii2-app-basic","auth","login"],"title":"Yii2 basic login auth with database","uri":"/yii2-basic-auth-login/#修改loginform模型"},{"categories":["CODE"],"content":"\r修改config/web.php ...省略... 'user' =\u003e [ 'identityClass' =\u003e 'app\\models\\Users', 'enableAutoLogin' =\u003e true, ], ...省略... ","date":"2023-01-08","objectID":"/yii2-basic-auth-login/:5:0","series":null,"tags":["php","yii","yii2","yii2-app-basic","auth","login"],"title":"Yii2 basic login auth with database","uri":"/yii2-basic-auth-login/#修改configwebphp"},{"categories":["CODE"],"content":"\r結語完成以上步驟後就可以在http://localhost/basic/web/site/login中輸入admin/admin或guest/guest進行登入。 延伸閱讀Security ","date":"2023-01-08","objectID":"/yii2-basic-auth-login/:6:0","series":null,"tags":["php","yii","yii2","yii2-app-basic","auth","login"],"title":"Yii2 basic login auth with database","uri":"/yii2-basic-auth-login/#結語"},{"categories":["CODE"],"content":"弱點掃描、滲透測試或源碼檢測網路漏洞風險修補方法分享","date":"2022-04-30","objectID":"/web-vulnerability-prevent/","series":null,"tags":["php","javascript","Vulnerability Assessment","Penetration Test","Source Code Analysis"],"title":"Web Vulnerability Prevent","uri":"/web-vulnerability-prevent/"},{"categories":["CODE"],"content":" 弱點掃描、滲透測試或源碼檢測網路漏洞風險修補方法分享 ","date":"2022-04-30","objectID":"/web-vulnerability-prevent/:0:0","series":null,"tags":["php","javascript","Vulnerability Assessment","Penetration Test","Source Code Analysis"],"title":"Web Vulnerability Prevent","uri":"/web-vulnerability-prevent/#"},{"categories":["CODE"],"content":"\r前言分享一些PHP或JS弱點掃描、滲透測試或源碼檢測遇到的風險處理方法。 ","date":"2022-04-30","objectID":"/web-vulnerability-prevent/:1:0","series":null,"tags":["php","javascript","Vulnerability Assessment","Penetration Test","Source Code Analysis"],"title":"Web Vulnerability Prevent","uri":"/web-vulnerability-prevent/#前言"},{"categories":["CODE"],"content":"\rXSS 8.1版前可以使用 filter_var($variable, FILTER_SANITIZE_STRING) ，但是FILTER_SANITIZE_STRING在PHP8.1版被棄用了。 使用htmlspecialchars($variable, ENT_QUOTES)(使用ENT_QUOTES為雙引號與單引號都要轉換)。 Info\rfilter_var是直接把html的tag給去除掉，htmlspecialchars是把特殊字元轉換成編碼。\r","date":"2022-04-30","objectID":"/web-vulnerability-prevent/:2:0","series":null,"tags":["php","javascript","Vulnerability Assessment","Penetration Test","Source Code Analysis"],"title":"Web Vulnerability Prevent","uri":"/web-vulnerability-prevent/#xss"},{"categories":["CODE"],"content":"\rSQL Injection 治本方法就是使用PDO。 使用addslashes()可以解決大部分問題。 ","date":"2022-04-30","objectID":"/web-vulnerability-prevent/:3:0","series":null,"tags":["php","javascript","Vulnerability Assessment","Penetration Test","Source Code Analysis"],"title":"Web Vulnerability Prevent","uri":"/web-vulnerability-prevent/#sql-injection"},{"categories":["CODE"],"content":"\rPath Manipulation使用realpath()過濾掉../，使用basename()取得檔案名稱。 ","date":"2022-04-30","objectID":"/web-vulnerability-prevent/:4:0","series":null,"tags":["php","javascript","Vulnerability Assessment","Penetration Test","Source Code Analysis"],"title":"Web Vulnerability Prevent","uri":"/web-vulnerability-prevent/#path-manipulation"},{"categories":["CODE"],"content":"\rCross-Site Scripting: DOM使用js將資料傳給物件時，不要使用innerHTML，使用innerText。 ","date":"2022-04-30","objectID":"/web-vulnerability-prevent/:5:0","series":null,"tags":["php","javascript","Vulnerability Assessment","Penetration Test","Source Code Analysis"],"title":"Web Vulnerability Prevent","uri":"/web-vulnerability-prevent/#cross-site-scripting-dom"},{"categories":["CODE"],"content":"\rPassword Management: Hardcoded Password不要將密碼直接打在程式碼上，可以使用dotenv ","date":"2022-04-30","objectID":"/web-vulnerability-prevent/:6:0","series":null,"tags":["php","javascript","Vulnerability Assessment","Penetration Test","Source Code Analysis"],"title":"Web Vulnerability Prevent","uri":"/web-vulnerability-prevent/#password-management-hardcoded-password"},{"categories":["CODE"],"content":"\rInsecure Randomness使用random_int()，這個函數產生。 ","date":"2022-04-30","objectID":"/web-vulnerability-prevent/:7:0","series":null,"tags":["php","javascript","Vulnerability Assessment","Penetration Test","Source Code Analysis"],"title":"Web Vulnerability Prevent","uri":"/web-vulnerability-prevent/#insecure-randomness"},{"categories":["CODE"],"content":"阿里雲ECS使用XAMPP環境建Laravel","date":"2021-01-11","objectID":"/set-pp-xampp-laravel-in-ali-ecs/","series":null,"tags":["php","laravel","alibaba","ECS","XAMPP","composer"],"title":"Set Up XAMPP Laravel in Ali ECS","uri":"/set-pp-xampp-laravel-in-ali-ecs/"},{"categories":["CODE"],"content":" 阿里雲ECS使用XAMPP環境建Laravel ","date":"2021-01-11","objectID":"/set-pp-xampp-laravel-in-ali-ecs/:0:0","series":null,"tags":["php","laravel","alibaba","ECS","XAMPP","composer"],"title":"Set Up XAMPP Laravel in Ali ECS","uri":"/set-pp-xampp-laravel-in-ali-ecs/#"},{"categories":["CODE"],"content":"\r前言玩過 AWS EC2 跟GAE，來玩看看阿里雲。 ","date":"2021-01-11","objectID":"/set-pp-xampp-laravel-in-ali-ecs/:1:0","series":null,"tags":["php","laravel","alibaba","ECS","XAMPP","composer"],"title":"Set Up XAMPP Laravel in Ali ECS","uri":"/set-pp-xampp-laravel-in-ali-ecs/#前言"},{"categories":["CODE"],"content":"\r1. 安裝XAMPP到XAMPP官網下載你要的Linux版本的XAMPP， 接著把下載完成的檔案放到 /opt/ 底下，接著運行下面指令: cd /opt chmod 755 xampp-linux-*-installer.run sudo ./xampp-linux-*-installer.run 安裝完成後，可以使用CURL測試一下: curl -L http://localhost 成功後接著就在瀏覽器輸入 http://公網，出現以下畫面表示成功。 xampp\r如果失敗的話，有可能是ECS的80 port沒有開，這時候就要到 網路與安全/安全性群組/設定規則/快速建立規則 加入80 port 或其他你想開的port。 這樣應該就沒有問題了!! ","date":"2021-01-11","objectID":"/set-pp-xampp-laravel-in-ali-ecs/:2:0","series":null,"tags":["php","laravel","alibaba","ECS","XAMPP","composer"],"title":"Set Up XAMPP Laravel in Ali ECS","uri":"/set-pp-xampp-laravel-in-ali-ecs/#1-安裝xampp"},{"categories":["CODE"],"content":"\r2. 建立Laravel先安裝 composer apt install composer 接著在 /opt/lampp/htdocs/ 底下建立 Laravel 專案 (可以看這篇) 設定資料夾權限: cd /專案名稱 sudo chmod -R 775 storage sudo chmod -R 775 bootstrap/cache 因為Laravel專案首頁是在 專案/public 底下，所以要去 apache設定， 打開 /opt/lampp/etc/extra/httpd-vhosts.conf中加入: \u003cVirtualHost /專案名稱:80\u003e DocumentRoot \"/opt/lampp/htdocs/專案名稱/public\" ServerAdmin Admin \u003cDirectory \"/opt/lampp/htdocs/專案名稱\"\u003e Options All AllowOverride All Require all granted \u003c/Directory\u003e \u003c/VirtualHost\u003e 儲存後重啟apache: /opt/lampp/lampp restart 重啟後打開 http://公網/專案名稱 打完收工 ","date":"2021-01-11","objectID":"/set-pp-xampp-laravel-in-ali-ecs/:3:0","series":null,"tags":["php","laravel","alibaba","ECS","XAMPP","composer"],"title":"Set Up XAMPP Laravel in Ali ECS","uri":"/set-pp-xampp-laravel-in-ali-ecs/#2-建立laravel"},{"categories":["CODE"],"content":"\r常見問題1. 替換掉Linux預設的php版本 執行指令: sudo ln -s /opt/lampp/bin/php /usr/bin/php 如果出現錯誤 failed to create symbolic link '/usr/bin/php': File exists，就執行指令 sudo rm /usr/bin/php sudo ln -s /opt/lampp/bin/php /usr/bin/php 2. 執行Composer錯誤 出現錯誤 PHP Warning: require(Composer/autoload.php): failed to open stream 執行指令: curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/bin --filename=composer 3. The stream or file ”laravel.log“ could not be opened: failed to open stream: Permission denied 設定資料夾權限: cd /專案名稱 sudo chmod -R 775 storage sudo chmod -R 775 bootstrap/cache 參考資料: https://www.cnblogs.com/jeacy/p/7132394.html https://askubuntu.com/questions/563972/how-to-link-to-php-from-xampp-installation-so-i-can-just-use-php-command-instead https://github.com/composer/composer/issues/5510 https://stackoverflow.com/questions/52178033/the-stream-or-file-laravel-log-could-not-be-opened-failed-to-open-stream-pe ","date":"2021-01-11","objectID":"/set-pp-xampp-laravel-in-ali-ecs/:4:0","series":null,"tags":["php","laravel","alibaba","ECS","XAMPP","composer"],"title":"Set Up XAMPP Laravel in Ali ECS","uri":"/set-pp-xampp-laravel-in-ali-ecs/#常見問題"},{"categories":["EXECUTION"],"content":"使用TCPDF的addTTFfont加入字型問題","date":"2020-11-13","objectID":"/tcpdf-addfont/","series":null,"tags":["php","tcpdf","pdf","font","addfont"],"title":"TCPDF addTTFfont Problem","uri":"/tcpdf-addfont/"},{"categories":["EXECUTION"],"content":" 使用TCPDF的addTTFfont加入字型問題 ","date":"2020-11-13","objectID":"/tcpdf-addfont/:0:0","series":null,"tags":["php","tcpdf","pdf","font","addfont"],"title":"TCPDF addTTFfont Problem","uri":"/tcpdf-addfont/#"},{"categories":["EXECUTION"],"content":"\r前言如果今天你是使用TCPDF的人，要加入外部字型的時候會使用到addTTFfont這個函式；但如果照著官網上Docs的方法來加入某些中文字型，作法如下: $fontname = $pdf-\u003eaddTTFfont('/path-to-font/DejaVuSans.ttf', 'TrueTypeUnicode', '', 32); 會發現在使用Adobe Acrobat Reader DC 打開檔案時會出現以下錯誤訊息: font\r然後你的字就沒辦法顯示，可是在網頁上打開PDF檔案又可以😱😱 ","date":"2020-11-13","objectID":"/tcpdf-addfont/:1:0","series":null,"tags":["php","tcpdf","pdf","font","addfont"],"title":"TCPDF addTTFfont Problem","uri":"/tcpdf-addfont/#前言"},{"categories":["EXECUTION"],"content":"\r解決方法以下是addTTFfont的函式: public static function addTTFfont($fontfile, $fonttype='', $enc='', $flags=32, $outpath='', $platid=3, $encid=1, $addcbbox=false, $link=false) { .... } 在官方文檔中他們提到了以下: 信息\rConvert a font for TCPDF\rUsing the addTTFfont() method you can directly create a TCPDF font starting from a TrueType, OpenType or Type1 font.\rNOTE: The ‘fonts’ folder must be writeable by the webserver.\r這時候你就會在$fonttype的位置傻傻的填入 TrueType、Type1以及 TrueTypeUnicode，然後就發生前言的悲劇。 可是天殺的他們並沒有提到還有以下這幾個參數可以填: CID0JP = CID-0 Japanese CID0KR = CID-0 Korean CID0CS = CID-0 Chinese Simplified CID0CT = CID-0 Chinese Traditional 所以你只要根據你對應的字型語系來使用上述參數，你在使用Adobe Acrobat Reader DC 打開檔案後就不會報錯了。 ","date":"2020-11-13","objectID":"/tcpdf-addfont/:2:0","series":null,"tags":["php","tcpdf","pdf","font","addfont"],"title":"TCPDF addTTFfont Problem","uri":"/tcpdf-addfont/#解決方法"},{"categories":["EXECUTION"],"content":"\r後話是怎麼發現還有那幾種參數可以使用的? 就是到 TCPDF/include/tcpdf_fonts.php 裡面看source code，還好他註解有寫😂 以下是他的註解，有興趣的可以參考: /** * Convert and add the selected TrueType or Type1 font to the fonts folder (that must be writeable). * @param $fontfile (string) Font file (full path). * @param $fonttype (string) Font type. Leave empty for autodetect mode. Valid values are: TrueTypeUnicode, TrueType, Type1, CID0JP = CID-0 Japanese, CID0KR = CID-0 Korean, CID0CS = CID-0 Chinese Simplified, CID0CT = CID-0 Chinese Traditional. * @param $enc (string) Name of the encoding table to use. Leave empty for default mode. Omit this parameter for TrueType Unicode and symbolic fonts like Symbol or ZapfDingBats. * @param $flags (int) Unsigned 32-bit integer containing flags specifying various characteristics of the font (PDF32000:2008 - 9.8.2 Font Descriptor Flags): +1 for fixed font; +4 for symbol or +32 for non-symbol; +64 for italic. Fixed and Italic mode are generally autodetected so you have to set it to 32 = non-symbolic font (default) or 4 = symbolic font. * @param $outpath (string) Output path for generated font files (must be writeable by the web server). Leave empty for default font folder. * @param $platid (int) Platform ID for CMAP table to extract (when building a Unicode font for Windows this value should be 3, for Macintosh should be 1). * @param $encid (int) Encoding ID for CMAP table to extract (when building a Unicode font for Windows this value should be 1, for Macintosh should be 0). When Platform ID is 3, legal values for Encoding ID are: 0=Symbol, 1=Unicode, 2=ShiftJIS, 3=PRC, 4=Big5, 5=Wansung, 6=Johab, 7=Reserved, 8=Reserved, 9=Reserved, 10=UCS-4. * @param $addcbbox (boolean) If true includes the character bounding box information on the php font file. * @param $link (boolean) If true link to system font instead of copying the font data (not transportable) - Note: do not work with Type1 fonts. * @return (string) TCPDF font name or boolean false in case of error. * @author Nicola Asuni * @since 5.9.123 (2010-09-30) * @public static */ public static function addTTFfont($fontfile, $fonttype='', $enc='', $flags=32, $outpath='', $platid=3, $encid=1, $addcbbox=false, $link=false) ","date":"2020-11-13","objectID":"/tcpdf-addfont/:3:0","series":null,"tags":["php","tcpdf","pdf","font","addfont"],"title":"TCPDF addTTFfont Problem","uri":"/tcpdf-addfont/#後話"},{"categories":["CODE"],"content":"Laravel一些實用小技巧或語法","date":"2020-10-21","objectID":"/laravel-tips/","series":null,"tags":["laravel","php","tips"],"title":"Laravel Tips","uri":"/laravel-tips/"},{"categories":["CODE"],"content":" Laravel一些實用小技巧或語法 ","date":"2020-10-21","objectID":"/laravel-tips/:0:0","series":null,"tags":["laravel","php","tips"],"title":"Laravel Tips","uri":"/laravel-tips/#"},{"categories":["CODE"],"content":"\rURL 取得網域名稱(Domain name，如:www.example.com) Request::getHost(); 取得傳輸協定+Domain網址(如:http://www.example.com) Request::root(); 在網址 http://localhost:8000/users/{id}?int=95 中取得id或int的值 request()-\u003eid; request()-\u003eint; ","date":"2020-10-21","objectID":"/laravel-tips/:1:0","series":null,"tags":["laravel","php","tips"],"title":"Laravel Tips","uri":"/laravel-tips/#url"},{"categories":["CODE"],"content":"使用cURL去接別人的API","date":"2020-10-09","objectID":"/php-curl-api/","series":null,"tags":["php","curl","api"],"title":"PHP cURL API (POST \u0026 GET)","uri":"/php-curl-api/"},{"categories":["CODE"],"content":" 使用cURL去接別人的API ","date":"2020-10-09","objectID":"/php-curl-api/:0:0","series":null,"tags":["php","curl","api"],"title":"PHP cURL API (POST \u0026 GET)","uri":"/php-curl-api/#"},{"categories":["CODE"],"content":"\r1. cURLhttps://www.php.net/manual/en/book.curl.php 使用cURL支援HTTP Authorization 、POST的特性去接別人的API ","date":"2020-10-09","objectID":"/php-curl-api/:1:0","series":null,"tags":["php","curl","api"],"title":"PHP cURL API (POST \u0026 GET)","uri":"/php-curl-api/#1-curl"},{"categories":["CODE"],"content":"\r2. POST首先要看OAS文件去決定要用哪種方式去傳送或接收資料，以下是POST的方法， //init curl $ch = curl_init(); //curl_setopt可以設定curl參數 //CURLOPT_RETURNTRANSFER為true的話，curl只會將結果傳回，並不會輸出在畫面上 curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); //設定url curl_setopt($ch , CURLOPT_URL , \"http://www.API.com/API\"); //設定header curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-type: application/x-www-form-urlencoded')); //啟用POST curl_setopt($ch, CURLOPT_POST, true); //傳入POST參數 curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query( array( \"ID\"=\u003e\"TESTID\") )); //執行，並將結果存回 $result = curl_exec($ch); //關閉連線 curl_close($ch); 可以根據回傳的資料再去做處理。 ","date":"2020-10-09","objectID":"/php-curl-api/:2:0","series":null,"tags":["php","curl","api"],"title":"PHP cURL API (POST \u0026 GET)","uri":"/php-curl-api/#2-post"},{"categories":["CODE"],"content":"\r3. GET //init curl $ch = curl_init(); //curl_setopt可以設定curl參數 //設定url curl_setopt($ch , CURLOPT_URL , \"http://www.API.com/API?ID=TESTID\"); //設定AGENT curl_setopt($ch, CURLOPT_USERAGENT, \"API Bot\"); //執行，並將結果存回 $result = curl_exec($ch); //關閉連線 curl_close($ch); ","date":"2020-10-09","objectID":"/php-curl-api/:3:0","series":null,"tags":["php","curl","api"],"title":"PHP cURL API (POST \u0026 GET)","uri":"/php-curl-api/#3-get"},{"categories":["CODE"],"content":"使用Pusher在Laravel的事件中做出廣播功能","date":"2020-10-04","objectID":"/laravel-event-pusher/","series":null,"tags":["php","html","laravel","pusher","event"],"title":"Laravel Event - Pusher","uri":"/laravel-event-pusher/"},{"categories":["CODE"],"content":" 使用Pusher在Laravel的事件中做出廣播功能 ","date":"2020-10-04","objectID":"/laravel-event-pusher/:0:0","series":null,"tags":["php","html","laravel","pusher","event"],"title":"Laravel Event - Pusher","uri":"/laravel-event-pusher/#"},{"categories":["CODE"],"content":"\r前言使用Pusher在Laravel中做出訊息廣播的功能。 ","date":"2020-10-04","objectID":"/laravel-event-pusher/:1:0","series":null,"tags":["php","html","laravel","pusher","event"],"title":"Laravel Event - Pusher","uri":"/laravel-event-pusher/#前言"},{"categories":["CODE"],"content":"\r1. Pusher到Pusher官網建立帳號後，建立一個Channel: Cluster選擇ap3 Backend選擇Laravel 建立完成後就到https://dashboard.pusher.com/apps 點擊剛剛建立的Channel，接著點選左邊的Getting Started。 找到STEP 2 的地方，安裝pusher，在你的laravel專案底下執行: composer require pusher/pusher-php-server 接著在你的.env檔案中將PUSHER_APP_ID、PUSHER_APP_KEY、PUSHER_APP_SECRET填入， PUSHER_APP_CLUSTER填入ap3。 重點是 BROADCAST_DRIVER=pusher。 ","date":"2020-10-04","objectID":"/laravel-event-pusher/:2:0","series":null,"tags":["php","html","laravel","pusher","event"],"title":"Laravel Event - Pusher","uri":"/laravel-event-pusher/#1-pusher"},{"categories":["CODE"],"content":"\r2. 建立事件打開 app/Providers/EventServiceProvider.php，在listen中加入: 'App\\Events\\TestPusher' =\u003e [ 'App\\Listeners\\SendMessageNotification', ], 打開cmd，在你的laravel專案底下執行: php artisan event:generate 接著打開剛剛建立的事件 app/Events/TestPusher.php ，將內容改為: \u003c?php namespace App\\Events; use Illuminate\\Broadcasting\\Channel; use Illuminate\\Broadcasting\\InteractsWithSockets; use Illuminate\\Broadcasting\\PresenceChannel; use Illuminate\\Broadcasting\\PrivateChannel; use Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast; use Illuminate\\Foundation\\Events\\Dispatchable; use Illuminate\\Queue\\SerializesModels; class TestPusher implements ShouldBroadcast { use Dispatchable, InteractsWithSockets, SerializesModels; public $message; public function __construct($message) { $this-\u003emessage = $message; } public function broadcastOn() { return ['my-channel']; } public function broadcastAs() { return 'my-event'; } } ","date":"2020-10-04","objectID":"/laravel-event-pusher/:3:0","series":null,"tags":["php","html","laravel","pusher","event"],"title":"Laravel Event - Pusher","uri":"/laravel-event-pusher/#2-建立事件"},{"categories":["CODE"],"content":"\r3. 事件傳送在views底下建立視圖pusher.blade.php，code為pusher Getting Started 的STEP 1。 web.php: \u003c?php use Illuminate\\Support\\Facades\\Route; use App\\Events\\TestPusher; Route::get('/', function () { return view('welcome'); }); Route::get('/pusher', function () { return view('pusher'); }); Route::get('/pusher_test', function () { event(new TestPusher('hello world')); }); 打開兩個分頁 /pusher 和 /pusher_test ，打開pusher_test的同時，pusher顯示了訊息Hello world。 延伸閱讀Security ","date":"2020-10-04","objectID":"/laravel-event-pusher/:4:0","series":null,"tags":["php","html","laravel","pusher","event"],"title":"Laravel Event - Pusher","uri":"/laravel-event-pusher/#3-事件傳送"},{"categories":["CODE"],"content":"Laravel 匯出基礎篇 - Basic Laravel Export","date":"2020-07-07","objectID":"/laravel-excel-export-basic/","series":null,"tags":["php","html","laravel","excel","export"],"title":"Laravel Excel Export - Basic","uri":"/laravel-excel-export-basic/"},{"categories":["CODE"],"content":" Laravel 匯出基礎篇 - Basic Laravel Export ","date":"2020-07-07","objectID":"/laravel-excel-export-basic/:0:0","series":null,"tags":["php","html","laravel","excel","export"],"title":"Laravel Excel Export - Basic","uri":"/laravel-excel-export-basic/#"},{"categories":["CODE"],"content":"\r前言如何使用 Laravel Excel 這個套件來實現匯出的功能，以使用者資料匯出為範例。 ","date":"2020-07-07","objectID":"/laravel-excel-export-basic/:1:0","series":null,"tags":["php","html","laravel","excel","export"],"title":"Laravel Excel Export - Basic","uri":"/laravel-excel-export-basic/#前言"},{"categories":["CODE"],"content":"\r1. Laravel Excel 安裝安裝需求 : PHP: ^7.0 Laravel: ^5.5 PhpSpreadsheet: ^1.6 PHP extension php_zip enabled PHP extension php_xml enabled PHP extension php_gd2 enabled PHP extension php_iconv enabled PHP extension php_simplexml enabled PHP extension php_xmlreader enabled PHP extension php_zlib enabled A. 執行安裝指令 : composer require maatwebsite/excel B. 在 config/app.php 中加入 : 'providers' =\u003e [ ... Maatwebsite\\Excel\\ExcelServiceProvider::class, ] 'aliases' =\u003e [ ... 'Excel' =\u003e Maatwebsite\\Excel\\Facades\\Excel::class, ] C. 將 excel.php 丟到 config 底下 : php artisan vendor:publish --provider=\"Maatwebsite\\Excel\\ExcelServiceProvider\" ","date":"2020-07-07","objectID":"/laravel-excel-export-basic/:2:0","series":null,"tags":["php","html","laravel","excel","export"],"title":"Laravel Excel Export - Basic","uri":"/laravel-excel-export-basic/#1-laravel-excel-安裝"},{"categories":["CODE"],"content":"\r2. 建立匯出Model先建立 app/Exports 。 執行指令 : php artisan make:export UsersExport --model=User UsersExport.php : \u003c?php namespace App\\Exports; use App\\User; use Maatwebsite\\Excel\\Concerns\\FromCollection; class UsersExport implements FromCollection { public function collection() { return User::all(); } } ","date":"2020-07-07","objectID":"/laravel-excel-export-basic/:3:0","series":null,"tags":["php","html","laravel","excel","export"],"title":"Laravel Excel Export - Basic","uri":"/laravel-excel-export-basic/#2-建立匯出model"},{"categories":["CODE"],"content":"\r3. 建立Controller執行指令 : php artisan make:controller UsersController UsersController.php : \u003c?php namespace App\\Http\\Controllers; use App\\Exports\\UsersExport; use Maatwebsite\\Excel\\Facades\\Excel; class UsersController extends Controller { public function export() { return Excel::download(new UsersExport, 'users.xlsx'); } } ","date":"2020-07-07","objectID":"/laravel-excel-export-basic/:4:0","series":null,"tags":["php","html","laravel","excel","export"],"title":"Laravel Excel Export - Basic","uri":"/laravel-excel-export-basic/#3-建立controller"},{"categories":["CODE"],"content":"\r4. 建立路由web.php Route::get('users/export/', 'UsersController@export'); ","date":"2020-07-07","objectID":"/laravel-excel-export-basic/:5:0","series":null,"tags":["php","html","laravel","excel","export"],"title":"Laravel Excel Export - Basic","uri":"/laravel-excel-export-basic/#4-建立路由"},{"categories":["CODE"],"content":"\r5. 取得使用者匯出資料 php artisan serve 網址輸入: http://127.0.0.1:8000/users/export/ 取得匯出檔案。 ","date":"2020-07-07","objectID":"/laravel-excel-export-basic/:6:0","series":null,"tags":["php","html","laravel","excel","export"],"title":"Laravel Excel Export - Basic","uri":"/laravel-excel-export-basic/#5-取得使用者匯出資料"},{"categories":["CODE"],"content":"壓縮下載 - Zip Download","date":"2020-06-28","objectID":"/laravel-zip/","series":null,"tags":["laravel","php","html","zip","ZipArchive"],"title":"Laravel Zip","uri":"/laravel-zip/"},{"categories":["CODE"],"content":" 壓縮下載 - Zip Download ","date":"2020-06-28","objectID":"/laravel-zip/:0:0","series":null,"tags":["laravel","php","html","zip","ZipArchive"],"title":"Laravel Zip","uri":"/laravel-zip/#"},{"categories":["CODE"],"content":"\r前言將選取的資料夾內的檔案全部加入壓縮檔並且下載。 ","date":"2020-06-28","objectID":"/laravel-zip/:1:0","series":null,"tags":["laravel","php","html","zip","ZipArchive"],"title":"Laravel Zip","uri":"/laravel-zip/#前言"},{"categories":["CODE"],"content":"\r1. Viewzip.blade.php : \u003cform action=\"{% raw %}{{ route('zip.download') }}{% endraw %}\" method=\"post\"\u003e @csrf \u003cselect name=\"folder\"\u003e \u003coption value=\"\"\u003e請選擇\u003c/option\u003e @foreach ($folders as $folder) \u003coption\u003e{% raw %}{{ $folder }}{% endraw %}\u003c/option\u003e @endforeach \u003c/select\u003e \u003cbutton type=\"submit\"\u003eSubmit\u003c/button\u003e \u003c/form\u003e ","date":"2020-06-28","objectID":"/laravel-zip/:2:0","series":null,"tags":["laravel","php","html","zip","ZipArchive"],"title":"Laravel Zip","uri":"/laravel-zip/#1-view"},{"categories":["CODE"],"content":"\r2. Routeweb.php : Route::get('zip', 'ZipController@index')-\u003ename('zip'); Route::post('zip/download', 'ZipController@zip')-\u003ename('zip.download'); ","date":"2020-06-28","objectID":"/laravel-zip/:3:0","series":null,"tags":["laravel","php","html","zip","ZipArchive"],"title":"Laravel Zip","uri":"/laravel-zip/#2-route"},{"categories":["CODE"],"content":"\r3. ControllerZipController.php : use ZipArchive; use File; public function index() { $directories = File::directories(public_path().'\\storage\\your\\path'); $folders = array_map('basename', $directories); return view('zip',compact('folders')); } public function zip(Request $request) { $zip = new ZipArchive; $fileName = $request-\u003efolder.'.zip'; if ($zip-\u003eopen(public_path($fileName), ZipArchive::CREATE) === TRUE) { $files = File::files(public_path('storage/your/path/'.$request-\u003efolder)); foreach ($files as $key =\u003e $value) { $relativeNameInZipFile = basename($value); $zip-\u003eaddFile($value, $relativeNameInZipFile); } $zip-\u003eclose(); } return response()-\u003edownload(public_path($fileName)); } 在第6行中使用了 File::directories() 獲取一個目錄下的所有目錄， 接著第7行使用 array_map 的 basename 獲取目錄名稱，並回傳給 zip.blade.php。 zip() 在 18~21 行中，將選取資料夾內的檔案逐一加到壓縮檔中。 ","date":"2020-06-28","objectID":"/laravel-zip/:4:0","series":null,"tags":["laravel","php","html","zip","ZipArchive"],"title":"Laravel Zip","uri":"/laravel-zip/#3-controller"},{"categories":["CODE"],"content":"\r4. Reference ZipArchive File ","date":"2020-06-28","objectID":"/laravel-zip/:5:0","series":null,"tags":["laravel","php","html","zip","ZipArchive"],"title":"Laravel Zip","uri":"/laravel-zip/#4-reference"},{"categories":["CODE"],"content":"選單管理 - Menu Manage","date":"2020-06-11","objectID":"/laravel-myweb-12/","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page","navbar"],"title":"Laravel Backend Control Website - 12","uri":"/laravel-myweb-12/"},{"categories":["CODE"],"content":" 選單管理 - Menu Manage ","date":"2020-06-11","objectID":"/laravel-myweb-12/:0:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page","navbar"],"title":"Laravel Backend Control Website - 12","uri":"/laravel-myweb-12/#"},{"categories":["CODE"],"content":"\r前言上一篇 新增了選單管理，這篇就是要將 導覽列、選單及 頁面 三者串連起來。 ","date":"2020-06-11","objectID":"/laravel-myweb-12/:1:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page","navbar"],"title":"Laravel Backend Control Website - 12","uri":"/laravel-myweb-12/#前言"},{"categories":["CODE"],"content":"\r1. 導覽列規則 導覽名稱唯一(Unique)。 類型一 : 導覽目錄 下拉式選單，無視設定連結。 選單內容可以在選單管理進行排序設定。 類型二 : 一般頁面 點選後直接跳到該頁面。 外部連結直接貼完整網址，ex : https://www.google.com/ 指定頁面連結要透過指定格式，如http://127.0.0.1:8000/article/導覽列名稱/選單名稱?頁面網址。 ","date":"2020-06-11","objectID":"/laravel-myweb-12/:2:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page","navbar"],"title":"Laravel Backend Control Website - 12","uri":"/laravel-myweb-12/#1-導覽列規則"},{"categories":["CODE"],"content":"\r2. 選單規則 選單名稱唯一(Unique)。 如有設定連結，點擊選單則跳轉到該頁面。 清單顯示意指所有 頁面設定 連接該選單的頁面以條列式一一顯示。 非清單顯示意指顯示 更新時間 最新的頁面。 連結設定請參照導覽列 一般頁面 設定。 ","date":"2020-06-11","objectID":"/laravel-myweb-12/:3:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page","navbar"],"title":"Laravel Backend Control Website - 12","uri":"/laravel-myweb-12/#2-選單規則"},{"categories":["CODE"],"content":"\r3. 頁面規則 頁面網址唯一(Unique)。 頁面網址用來定義該頁面位置，所以只須給名稱即可，ex:Page1。 在選單的清單顯示中，頁面以 更新時間 新到舊進行排序。 ","date":"2020-06-11","objectID":"/laravel-myweb-12/:4:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page","navbar"],"title":"Laravel Backend Control Website - 12","uri":"/laravel-myweb-12/#3-頁面規則"},{"categories":["CODE"],"content":"\r4. 頁面及選單串聯之前有在 pages 資料表建立 menu_id 的欄位，現在要在 Page 的新增、修改及首頁加入 menu_id 的新增修改表單。 create.blade.php : ...略... @csrf \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"menu_id\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Menu') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cselect class='form-control' name='menu_id' aria-describedby=\"menuHelp\"\u003e \u003coption value=''\u003e{% raw %}{{ trans('Please choose').trans('Menu') }}{% endraw %}\u003c/option\u003e @foreach($menus as $key =\u003e $value) \u003coption value=\"{% raw %}{{ $value['id'] }}{% endraw %}\"\u003e{% raw %}{{ $value['name'] }}{% endraw %}\u003c/option\u003e @endforeach \u003c/select\u003e \u003cspan id=\"menuHelp\" class=\"help-block\"\u003e 選擇要加入的導覽列項目。 \u003c/span\u003e \u003c/div\u003e \u003c/div\u003e ...略... edit.blade.php : ...略... @csrf @method('PUT') \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"menu_id\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Menu') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cselect class='form-control' name='menu_id' aria-describedby=\"menuHelp\"\u003e \u003coption value='NULL' {% raw %}{{ ($page-\u003emenu_id) ? \"selected\" : \"\" }}{% endraw %}\u003e{% raw %}{{ trans('Please choose').trans('Menu') }}{% endraw %}\u003c/option\u003e @foreach($menus as $key =\u003e $value) @if ($value['id'] == $page-\u003emenu_id) \u003coption value=\"{% raw %}{{ $value['id'] }}{% endraw %}\" selected\u003e{% raw %}{{ $value['name'] }}{% endraw %}\u003c/option\u003e @else \u003coption value=\"{% raw %}{{ $value['id'] }}{% endraw %}\"\u003e{% raw %}{{ $value['name'] }}{% endraw %}\u003c/option\u003e @endif @endforeach \u003c/select\u003e \u003cspan id=\"menuHelp\" class=\"help-block\"\u003e 選擇要加入的導覽列項目。 \u003c/span\u003e \u003c/div\u003e \u003c/div\u003e ...略... 接下來根據重點 1~3 在 MenuController.php 建立以下 : /** * [menus description] * @param [type] $nav [選取的導覽列] * @param [type] $menu [選取的選單] * @param [type] $menus_nav [導覽列下所有的選單資料] * @param [type] $select_menu [選取的選單資料] * @param [type] $menu_pages [選取選單下所有頁面的資料] * @return [type] [description] */ public function menus($nav,$menu) { $navbar = Navbar::where('name',$nav)-\u003efirst(); $menus_nav = Menu::where('navbar_id',$navbar-\u003eid)-\u003ewhere('is_open',1)-\u003eorderby('sort')-\u003eget(); $select_menu = Menu::where('name',$menu)-\u003efirst(); if (empty($select_menu)) { abort(404); } if ($select_menu-\u003eis_list == '1') { $menu_pages = Page::where('is_open',1)-\u003eorderby('updated_at','desc')-\u003epaginate(10); } else { $menu_pages = Page::where('menu_id',$select_menu-\u003eid)-\u003ewhere('is_open',1)-\u003eorderby('updated_at','desc')-\u003efirst(); } return view('menu',compact('menus_nav','select_menu','navbar','menu_pages')); } 路由新增 : ...略... Route::get('/article/{nav}/{menu}?{page}', function () {return view('menu');})-\u003ename('page'); Route::get('/article/{nav}/{menu}', 'MenuController@menus')-\u003ename('menu'); View::composer(['*'], function ($view) { if (Request::getQueryString()) { $current_page = App\\Page::where('url', $_SERVER['QUERY_STRING'])-\u003efirst(); $view-\u003ewith('current_page', $current_page); } $pages = App\\Page::where('is_open',1)-\u003eorderby('updated_at')-\u003eget(); $view-\u003ewith('pages',$pages); ...略... }); 解釋時間 : $nav 和 $menu 分別是導覽列以及選單的 名稱。 比如說點擊了名為 menu1 的選單且導覽列為 nav1，控制器14~17行判斷該選單是否存在。 若選單存在則19行判斷是否為清單顯示。 視圖新增 : menu.blade.php : @extends('_layouts.home.app') @section('title',$select_menu-\u003ename) @section('content') {% raw %}{{-- 頁面顯示 --}}{% endraw %} @if(Request::getQueryString()) \u003cdiv id=\"content\" class=\"col-md-12\"\u003e \u003cdiv class=\"card border-light\" style=\"border: none;\"\u003e \u003cdiv class=\"card-header bg-transparent\"\u003e \u003ch1\u003e\u003cb\u003e{% raw %}{{$current_page-\u003etitle}}{% endraw %}\u003c/b\u003e\u003c/h1\u003e \u003c/div\u003e \u003cdiv class=\"card-body\"\u003e {!! clean($current_page-\u003econtent) !!} \u003c/div\u003e \u003cdiv class=\"card-footer bg-transparent\"\u003e \u003cp\u003e\u003cspan class=\"badge badge-pill badge-primary\"\u003e{% raw %}{{ trans('Editor').' : '.$current_page-\u003eeditor }}{% endraw %}\u003c/span\u003e\u003c/p\u003e \u003cp\u003e\u003cspan class=\"badge badge-pill badge-primary\"\u003e{% raw %}{{ trans('Created_at').' : '.$current_page-\u003ecreated_at }}{% endraw %}\u003c/span\u003e\u003c/p\u003e \u003cp\u003e\u003cspan class=\"badge badge-pill badge-primary\"\u003e{% raw %}{{ trans('Updated_at').' : '.$current_page-\u003eupdated_at }}{% endraw %}\u003c/span\u003e\u003c/p\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e {% raw %}{{-- 是否清單顯示 --}}{% endraw %} @elseif($select_menu-\u003eis_lis","date":"2020-06-11","objectID":"/laravel-myweb-12/:5:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page","navbar"],"title":"Laravel Backend Control Website - 12","uri":"/laravel-myweb-12/#4-頁面及選單串聯"},{"categories":["CODE"],"content":"\r結語總結，後台新增順序為 導覽列 » 選單 » 頁面 導覽列(導覽目錄)可以有很多選單，選單(清單顯示)可以有很多頁面 你可以照自己的想法去做修改🥱 ","date":"2020-06-11","objectID":"/laravel-myweb-12/:6:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page","navbar"],"title":"Laravel Backend Control Website - 12","uri":"/laravel-myweb-12/#結語"},{"categories":["CODE"],"content":"選單管理 - Menu Manage","date":"2020-06-10","objectID":"/laravel-myweb-11/","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/"},{"categories":["CODE"],"content":" 選單管理 - Menu Manage ","date":"2020-06-10","objectID":"/laravel-myweb-11/:0:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#"},{"categories":["CODE"],"content":"\r前言Hello 大家！之前做過 導覽列 和 頁面 的CRUD，這篇就是要做最後的 選單 並將三者串連起來。 ","date":"2020-06-10","objectID":"/laravel-myweb-11/:1:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#前言"},{"categories":["CODE"],"content":"\r1. 新增Controller、Model、Migration首先，建立 Menu 的三寶 : // 一次性建立 php artisan make:model Menu -mcr ","date":"2020-06-10","objectID":"/laravel-myweb-11/:2:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#1-新增controllermodelmigration"},{"categories":["CODE"],"content":"\r2. 修改Migration \u003c?php use Illuminate\\Support\\Facades\\Schema; use Illuminate\\Database\\Schema\\Blueprint; use Illuminate\\Database\\Migrations\\Migration; class CreateMenusTable extends Migration { public function up() { Schema::create('menus', function (Blueprint $table) { $table-\u003ebigIncrements('id'); $table-\u003einteger('navbar_id')-\u003ecomment('導覽列'); $table-\u003estring('name')-\u003ecomment('名稱'); $table-\u003estring('link')-\u003enullable()-\u003ecomment('對外連結'); $table-\u003einteger('sort')-\u003enullable()-\u003ecomment('排序'); $table-\u003eboolean('is_list')-\u003edefault(true)-\u003ecomment('清單顯示'); $table-\u003eboolean('is_open')-\u003edefault(true)-\u003ecomment('是否開放'); $table-\u003etimestamps(); }); } public function down() { Schema::dropIfExists('menus'); } } 信息\r⚠ 清單顯示的目的請看下一篇\r建立資料表: php artisan migrate ","date":"2020-06-10","objectID":"/laravel-myweb-11/:3:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#2-修改migration"},{"categories":["CODE"],"content":"\r3. 修改ModelMenu.php : \u003c?php namespace App; use Illuminate\\Database\\Eloquent\\Model; class Menu extends Model { protected $table = 'menus'; protected $primaryKey = 'id'; protected $fillable = [ \"name\", \"navbar_id\", \"sort\", \"link\", \"is_list\", \"is_open\", ]; } ","date":"2020-06-10","objectID":"/laravel-myweb-11/:4:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#3-修改model"},{"categories":["CODE"],"content":"\r4. 加入路由 Route::prefix('manage')-\u003emiddleware('auth','admin')-\u003egroup(function(){ ...略... Route::resource('menu', 'MenuController'); }); ","date":"2020-06-10","objectID":"/laravel-myweb-11/:5:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#4-加入路由"},{"categories":["CODE"],"content":"\r5. 建立視圖 views/ ├── _layouts/ ├── _partials/ ├── auth/ └── manage/ └── log/ └── member/ └── menu/ ├── create.blade.php ├── edit.blade.php ├── index.blade.php └── sort.blade.php └── navbar/ └── page/ ","date":"2020-06-10","objectID":"/laravel-myweb-11/:6:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#5-建立視圖"},{"categories":["CODE"],"content":"\r6. 選單首頁MenuController.php : \u003c?php namespace App\\Http\\Controllers; use App\\Menu; use App\\Navbar; use App\\Page; use App\\Log; use Illuminate\\Http\\Request; use Illuminate\\Support\\Facades\\DB; use Illuminate\\Support\\Facades\\Auth; class MenuController extends Controller { public function index() { $all_menus = Menu::all(); $all_navbars = Navbar::all(); return view('manage.menu.index',compact('all_menus','all_navbars')); } ...略... } 注意\r會引入 all_navbars 是因為選單可能會與導覽列連動。\rindex.blade.php : @extends('_layouts.manage.app') @section('title', trans('Menu').trans('Manage')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ trans('Menu').trans('Manage') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-inline\"\u003e \u003cli class=\"list-inline-item\"\u003e{% raw %}{{ App\\Button::Create() }}{% endraw %}\u003c/li\u003e \u003cli class=\"list-inline-item\"\u003e{% raw %}{{ App\\Button::To(true,'sort',trans('Sort'),'','btn-primary') }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e \u003cdiv class=\"alert alert-warning\" role=\"alert\"\u003e 若有建立連結，點擊選單則直接跳到該連結頁面。\u003cbr\u003e \u003c/div\u003e \u003cdiv class=\"table-responsive\"\u003e \u003ctable id=\"data\" class=\"table table-hover table-bordered text-center\"\u003e \u003cthead\u003e \u003ctr class=\"table-info active\"\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Menu').trans('Name') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Navbar') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Link') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Sort') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Is_list') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Is_open') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Action') }}{% endraw %}\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e @foreach ($all_menus as $menu) \u003ctr\u003e \u003ctd\u003e{% raw %}{{ $menu-\u003ename }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ App\\Navbar::where('id','=',$menu-\u003enavbar_id)-\u003efirst('name')['name'] }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $menu-\u003elink }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $menu-\u003esort }}{% endraw %}\u003c/td\u003e \u003ctd\u003e\u003cfont color=\"{% raw %}{{App\\Enum::is_open['color'][$menu-\u003eis_list]}}{% endraw %}\"\u003e\u003ci class=\"fas fa-{% raw %}{{App\\Enum::is_open['label'][$menu-\u003eis_list]}}{% endraw %}\"\u003e\u003c/i\u003e\u003c/font\u003e\u003c/td\u003e \u003ctd\u003e\u003cfont color=\"{% raw %}{{App\\Enum::is_open['color'][$menu-\u003eis_open]}}{% endraw %}\"\u003e\u003ci class=\"fas fa-{% raw %}{{App\\Enum::is_open['label'][$menu-\u003eis_open]}}{% endraw %}\"\u003e\u003c/i\u003e\u003c/font\u003e\u003c/td\u003e \u003ctd\u003e \u003cform action=\"{% raw %}{{ route('menu.edit',$menu-\u003eid) }}{% endraw %}\" method=\"GET\"\u003e @csrf {% raw %}{{ App\\Button::edit($menu-\u003eid) }}{% endraw %} \u003c/form\u003e \u003cform action=\"{% raw %}{{ route('menu.destroy',$menu-\u003eid) }}{% endraw %}\" method=\"POST\"\u003e @method('DELETE') @csrf {% raw %}{{ App\\Button::deleting($menu-\u003eid) }}{% endraw %} \u003c/form\u003e \u003c/td\u003e \u003c/tr\u003e @endforeach \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e \u003c/div\u003e \u003c!-- \u003cdiv class=\"card-footer pagination justify-content-center\"\u003e {!! $all_menus-\u003elinks(\"pagination::bootstrap-4\") !!} \u003c/div\u003e --\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e @endsection 如要分頁就將 footer 取消註解，並將 controller 改成 : public function index() { $all_menus = Menu::paginate(); $all_navbars = Navbar::all(); return view('manage.menu.index',compact('all_menus','all_navbars')); } ","date":"2020-06-10","objectID":"/laravel-myweb-11/:7:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#6-選單首頁"},{"categories":["CODE"],"content":"\r7. 選單新增MenuController.php : \u003c?php ...略... public function create() { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '2') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } return view('manage.menu.create'); } public function store(Request $request) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '2') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } $error = 0; $menu = new Menu; $data = $request-\u003evalidate([ 'name' =\u003e ['required', 'string', 'max:255','unique:menus,name'], 'navbar_id' =\u003e ['required','integer'], 'link' =\u003e ['nullable'], 'is_open' =\u003e ['required'], 'is_list' =\u003e ['required'], ]); foreach ($request-\u003eexcept('_token', '_method') as $key =\u003e $value) { if ($request-\u003efilled($key) \u0026\u0026 $request-\u003efilled($key) != NULL) { $menu-\u003e$key = strip_tags(clean($data[$key])); if ($menu-\u003e$key == '') { $error += 1; } } else{ $menu-\u003e$key = NULL; } } if ($error == 0) { // 寫入log Log::write_log('menus',$request-\u003eall()); $menu-\u003esave(); } else{ return back()-\u003ewithInput()-\u003ewith('warning', '請確認輸入 !'); } // 寫入log Log::write_log('menus',$request-\u003eall()); return back()-\u003ewith('success', '選單新增成功 !'); } ...略... create.blade.php : @extends('_layouts.manage.app') @section('title', trans('Menu').trans('Create')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cform action=\"{% raw %}{{ route('menu.store') }}{% endraw %}\" method=\"POST\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ trans('Menu').trans('Create') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-unstyled\"\u003e \u003cli\u003e{% raw %}{{ App\\Button::GoBack(route('menu.index')) }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e @csrf \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"name\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Menu').trans('Name') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-4\"\u003e \u003cinput type=\"text\" class=\"form-control @error('name') is-invalid @enderror\" id=\"name\" name=\"name\" value=\"{% raw %}{{ old('name') }}{% endraw %}\" placeholder=\"{% raw %}{{ trans('Menu').trans('Name') }}{% endraw %}\" required\u003e @error('name') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"navbar_id\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Navbar') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-4\"\u003e \u003cselect class='form-control' name='navbar_id' required aria-describedby=\"navHelp\" required\u003e \u003coption value=''\u003e請選擇導覽列\u003c/option\u003e @foreach($navbars as $key =\u003e $value) \u003coption value=\"{% raw %}{{ $value['id'] }}{% endraw %}\"\u003e{% raw %}{{ $value['name'] }}{% endraw %}\u003c/option\u003e @endforeach \u003c/select\u003e \u003cspan id=\"navHelp\" class=\"form-text text-muted\"\u003e 選擇要加入的導覽列項目。 \u003c/span\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"link\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Link') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-4\"\u003e \u003cinput type=\"text\" class=\"form-control @error('link') is-invalid @enderror\" id=\"link\" name=\"link\" value=\"{% raw %}{{ old('link') }}{% endraw %}\" placeholder=\"{% raw %}{{ trans('Link') }}{% endraw %}\"\u003e @error('link') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"is_list\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Is_list') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cdiv class=\"custom-control custom-radio custom-control-inline\"\u003e \u003cinput class=\"custom-control-input\" type=\"radio\" name=\"is_list\" id=\"is_list1\" value=\"1\"\u003e \u003clabel class=\"custom-control-label\" for=\"is_list1\"\u003e{% raw %}{{ trans('Yes') }}{% endraw %}\u003c/label\u003e \u003c/div\u003e \u003cdiv class=\"custom-control custom-radio custom-control-inline\"\u003e \u003cinput class=\"custom-control-input\" type=\"radio\" name=\"is_list\" id=\"is_list2\" value=\"0\"\u003e \u003clabel class=\"custom-control-label\" for=\"is_list2\"\u003e{% raw %}{{ trans('No') }}{% endraw %}\u003c/label\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"is_op","date":"2020-06-10","objectID":"/laravel-myweb-11/:8:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#7-選單新增"},{"categories":["CODE"],"content":"\r8. 選單更新MenuController.php : ...略... public function edit($id) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '3') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } $menu = Menu::where('id',$id)-\u003efirst(); return view('manage.menu.edit',compact('menu')); } public function update(Request $request, $id) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '3') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } $error = 0; $menu = Menu::where('id', $id)-\u003efirst(); $data = $this-\u003evalidate($request, [ 'name' =\u003e ['required', 'string', 'max:255'], 'navbar_id' =\u003e ['required','integer'], 'link' =\u003e ['nullable','string'], 'is_open' =\u003e ['required','boolean'], 'is_list' =\u003e ['required','boolean'], ]); // 逐筆進行htmlpurufier 並去掉\u003cp\u003e\u003c/p\u003e foreach ($request-\u003eexcept('_token', '_method') as $key =\u003e $value) { if ($request-\u003efilled($key) \u0026\u0026 $request-\u003efilled($key) != NULL) { $menu-\u003e$key = strip_tags(clean($data[$key])); if ($menu-\u003e$key == '') { $error += 1; } } else{ $menu-\u003e$key = NULL; } } if ($error == 0) { // 寫入log Log::write_log('menus',$request-\u003eall()); $menu-\u003esave(); } else{ return back()-\u003ewithInput()-\u003ewith('warning', '請確認輸入 !'); } return back()-\u003ewith('success', '修改選單成功 !'); } ...略... edit.blade.php : @extends('_layouts.manage.app') @section('title', trans('Menu').trans('Edit')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ trans('Menu').trans('Edit') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-unstyled\"\u003e \u003cli\u003e{% raw %}{{ App\\Button::GoBack(route('menu.index')) }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e \u003cform method=\"POST\" action=\"{% raw %}{{ route('menu.update' , $menu-\u003eid) }}{% endraw %}\"\u003e @csrf @method('PUT') \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"name\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Menu').trans('Name') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput id=\"name\" type=\"text\" class=\"form-control @error('name') is-invalid @enderror\" name=\"name\" value=\"{% raw %}{{ $menu-\u003ename }}{% endraw %}\" required autocomplete=\"{% raw %}{{ trans('Menu').trans('Name') }}{% endraw %}\" autofocus readonly\u003e @error('name') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"navbar_id\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Navbar') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cselect class='form-control' name='navbar_id' required aria-describedby=\"navHelp\"\u003e @foreach($navbars as $key =\u003e $value) @if ($value['id'] == $menu-\u003enavbar_id) \u003coption value=\"{% raw %}{{ $value['id'] }}{% endraw %}\" selected\u003e{% raw %}{{ $value['name'] }}{% endraw %}\u003c/option\u003e @else \u003coption value=\"{% raw %}{{ $value['id'] }}{% endraw %}\"\u003e{% raw %}{{ $value['name'] }}{% endraw %}\u003c/option\u003e @endif @endforeach \u003c/select\u003e \u003cspan id=\"navHelp\" class=\"help-block\"\u003e 選擇要加入的導覽列項目。 \u003c/span\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"link\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Link') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput id=\"link\" type=\"text\" class=\"form-control @error('link') is-invalid @enderror\" name=\"link\" value=\"{% raw %}{{ $menu-\u003elink }}{% endraw %}\" autocomplete=\"{% raw %}{{ trans('Link') }}{% endraw %}\" autofocus\u003e @error('link') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"is_list\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Is_list') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cdiv class=\"custom-control custom-radio custom-control-inline\"\u003e \u003cinput class=\"custom-control-input\" type=\"radio\" name=\"is_list\" id=\"is_list1\" value=\"1\" {% raw %}{{ ($menu-\u003eis_list==\"1\")? \"checked\" : \"\" }}{% endraw %}\u003e \u003clabel class=\"custom-control-label\" for=\"is_list1\"\u003e{% raw %}{{ trans('Yes') }}{% endraw %}\u003c/label\u003e \u003c/div\u003e \u003cdiv clas","date":"2020-06-10","objectID":"/laravel-myweb-11/:9:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#8-選單更新"},{"categories":["CODE"],"content":"\r9. 選單刪除MenuController.php : ...略... public function destroy($id) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '4') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } // 寫入log Log::write_log('menus',Menu::where('id', $id)-\u003efirst()); Menu::destroy($id); return back()-\u003ewith('success', '刪除選單成功 !'); } ...略... ","date":"2020-06-10","objectID":"/laravel-myweb-11/:10:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#9-選單刪除"},{"categories":["CODE"],"content":"\r10. 選單排序\r信息\r和導覽列排序相同，只有開放中的選單可以排序。\r新增路由 : //排序、中介層:登入/管理員 Route::middleware('auth','admin')-\u003egroup(function() { Route::post('menu-sortable','MenuController@sort')-\u003ename('menu.sort'); Route::get('/manage/menu/sort', function () {return view('manage.menu.sort');}); }); //在各視圖中可直接使用以下參數 View::composer(['*'], function ($view) { $menus = App\\Menu::where('is_open',1)-\u003eorderby('sort')-\u003eget(); $view-\u003ewith('menus',$menus); }); sort.blade.php : @extends('_layouts.manage.app') @section('title', trans('Menu').trans('Sort')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{trans('Menu').trans('Sort')}}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-unstyled\"\u003e \u003cli\u003e{% raw %}{{ App\\Button::GoBack(route('menu.index')) }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e \u003cdiv class=\"alert alert-warning\" role=\"alert\"\u003e 1. 請直接拖曳目標列進行排序。\u003cbr\u003e 2. 調整完請點重新整理進行確認。 \u003c/div\u003e \u003ctable id=\"table\" class=\"table table-hover table-bordered text-center\"\u003e \u003cthead\u003e \u003ctr class=\"table-info active\"\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Menu').trans('Name')}}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Navbar') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Sort') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Is_list') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Is_open') }}{% endraw %}\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody id=\"tablecontents\"\u003e @foreach ($menus as $menu) \u003ctr class=\"row1\" data-id=\"{% raw %}{{ $menu-\u003eid }}{% endraw %}\"\u003e \u003ctd class=\"pl-3\"\u003e{% raw %}{{ $menu-\u003ename }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ App\\Navbar::where('id','=',$menu-\u003enavbar_id)-\u003efirst('name')['name'] }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $menu-\u003esort }}{% endraw %}\u003c/td\u003e \u003ctd\u003e\u003cfont color=\"{% raw %}{{App\\Enum::is_open['color'][$menu-\u003eis_list]}}{% endraw %}\"\u003e\u003ci class=\"fas fa-{% raw %}{{App\\Enum::is_open['label'][$menu-\u003eis_list]}}{% endraw %}\"\u003e\u003c/i\u003e\u003c/font\u003e\u003c/td\u003e \u003ctd\u003e\u003cfont color=\"{% raw %}{{App\\Enum::is_open['color'][$menu-\u003eis_open]}}{% endraw %}\"\u003e\u003ci class=\"fas fa-{% raw %}{{App\\Enum::is_open['label'][$menu-\u003eis_open]}}{% endraw %}\"\u003e\u003c/i\u003e\u003c/font\u003e\u003c/td\u003e \u003c/tr\u003e @endforeach \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e \u003cdiv class=\"card-footer text-center\"\u003e \u003ch5\u003e\u003cbutton class=\"btn btn-success btn-sm\" onclick=\"window.location.reload()\"\u003e{% raw %}{{ trans('Refresh') }}{% endraw %}\u003c/button\u003e\u003c/h5\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e @endsection @section('script') @parent \u003cscript type=\"text/javascript\"\u003e $(function () { // $(\"#table\").DataTable(); $(\"#tablecontents\").sortable({ items: \"tr\", cursor: 'move', opacity: 0.6, update: function() { sendOrderToServer(); } }); function sendOrderToServer() { var order = []; var token = $('meta[name=\"csrf-token\"]').attr('content'); $('tr.row1').each(function(index,element) { order.push({ id: $(this).attr('data-id'), position: index+1 }); }); $.ajax({ type: \"POST\", dataType: \"json\", url: \"{% raw %}{{ url('menu-sortable') }}{% endraw %}\", data: { order: order, _token: token }, success: function(response) { if (response.status == \"success\") { console.log(response); } else { console.log(response); } } }); } }); \u003c/script\u003e @show MenuController.php : ...略... //拖曳排序 public function sort(Request $request) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '3') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } $menus = Menu::all(); foreach ($menus as $menu) { foreach ($request-\u003eorder as $order) { if ($order['id'] == $menu-\u003eid) { $menu-\u003eupdate(['sort' =\u003e $order['position']]); } } } // 寫入log $sort = DB::table('menus')-\u003eselect('name','sort')-\u003eorderby('sort')-\u003eget(); Log::write_log('menus',$sort,'排序'); return response('Update Successfully.', 200); } ...略... ","date":"2020-06-10","objectID":"/laravel-myweb-11/:11:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#10-選單排序"},{"categories":["CODE"],"content":"\r11. 修改 nav.blade.php \u003cnav class=\"navbar navbar-expand-md navbar-light bg-white shadow-sm\"\u003e ...略... @case(1) \u003cli class=\"nav-item dropdown\"\u003e \u003ca class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\u003e {% raw %}{{ $navbar-\u003ename }}{% endraw %} \u003c/a\u003e \u003cdiv class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\"\u003e @foreach ($menus as $menu) @if ($menu-\u003enavbar_id == $navbar-\u003eid \u0026\u0026 $menu-\u003elink) \u003ca class=\"dropdown-item\" target=\"_blank\" href=\"{% raw %}{{ $menu-\u003elink }}{% endraw %}\"\u003e{% raw %}{{ $menu-\u003ename }}{% endraw %}\u003c/a\u003e @elseif($menu-\u003enavbar_id == $navbar-\u003eid) \u003ca class=\"dropdown-item\" href=\"/article/{% raw %}{{ $navbar-\u003ename }}{% endraw %}/{% raw %}{{ $menu-\u003ename }}{% endraw %}\"\u003e{% raw %}{{ $menu-\u003ename }}{% endraw %}\u003c/a\u003e @endif @endforeach \u003c/div\u003e \u003c/li\u003e @break ...略... \u003c/nav\u003e ","date":"2020-06-10","objectID":"/laravel-myweb-11/:12:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","menu","htmlpurifier","page"],"title":"Laravel Backend Control Website - 11","uri":"/laravel-myweb-11/#11-修改-navbladephp"},{"categories":["CODE"],"content":"執行後產生LOG資料 -Generate LOG Data After Execution","date":"2020-05-31","objectID":"/laravel-myweb-10/","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/"},{"categories":["CODE"],"content":" 執行後產生LOG資料 -Generate LOG Data After Execution ","date":"2020-05-31","objectID":"/laravel-myweb-10/:0:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/#"},{"categories":["CODE"],"content":"\r前言Hello 大家， 在執行新增、修改、刪除等動作後，必須要記錄改變後的資料以及誰進行操作，這樣出狀況才方便了解誰做出這麼偉大的事情。 ","date":"2020-05-31","objectID":"/laravel-myweb-10/:1:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/#前言"},{"categories":["CODE"],"content":"\r1. 取得使用者資訊首先，先建立一個 LOG 的model : // 一次性建立 php artisan make:model Log -mcr ","date":"2020-05-31","objectID":"/laravel-myweb-10/:2:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/#1-取得使用者資訊"},{"categories":["CODE"],"content":"\r2. 修改Migration \u003c?php use Illuminate\\Support\\Facades\\Schema; use Illuminate\\Database\\Schema\\Blueprint; use Illuminate\\Database\\Migrations\\Migration; class CreateLogsTable extends Migration { public function up() { Schema::create('logs', function (Blueprint $table) { $table-\u003ebigIncrements('id'); $table-\u003estring('user')-\u003ecomment('使用者'); $table-\u003estring('ip')-\u003ecomment('使用者IP'); $table-\u003estring('os')-\u003ecomment('作業系統'); $table-\u003estring('browser')-\u003ecomment('瀏覽器'); $table-\u003estring('browser_detail')-\u003ecomment('瀏覽器詳細資料'); $table-\u003estring('action')-\u003ecomment('動作'); $table-\u003estring('table')-\u003ecomment('資料表'); $table-\u003ejson('data')-\u003ecomment('資料'); $table-\u003etimestamps(); }); } public function down() { Schema::dropIfExists('logs'); } } ","date":"2020-05-31","objectID":"/laravel-myweb-10/:3:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/#2-修改migration"},{"categories":["CODE"],"content":"\r3. 修改ModelLog.php \u003c?php namespace App; use Illuminate\\Database\\Eloquent\\Model; class Log extends Model { protected $table = 'logs'; protected $primaryKey = 'id'; protected $fillable = [ \"user\", \"ip\", \"os\", \"browser\", \"browser_detail\", \"action\", \"table\", \"data\", ]; } ","date":"2020-05-31","objectID":"/laravel-myweb-10/:4:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/#3-修改model"},{"categories":["CODE"],"content":"\r4. 加入路由 Route::prefix('manage')-\u003emiddleware('auth','admin')-\u003egroup(function(){ ...略... Route::resource('log', 'LogController'); }); ","date":"2020-05-31","objectID":"/laravel-myweb-10/:5:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/#4-加入路由"},{"categories":["CODE"],"content":"\r5. 建立視圖 views/ ├── _layouts/ ├── _partials/ ├── auth/ └── manage/ └── log/ ├── detail.blade.php └── index.blade.php └── member/ └── navbar/ └── page/ ","date":"2020-05-31","objectID":"/laravel-myweb-10/:6:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/#5-建立視圖"},{"categories":["CODE"],"content":"\r6. Log 首頁index.blade.php @extends('_layouts.manage.app') @section('title', __('Log').__('Manage')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ __('Log').__('Manage') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cdiv class=\"table-responsive\"\u003e \u003ctable id=\"data\" class=\"table table-hover table-bordered text-center\"\u003e \u003cthead\u003e \u003ctr class=\"table-info active\"\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ __('Member') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ __('IP') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ __('Browser') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ __('Action') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ __('Table') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ __('Created_at') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e*\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e @foreach ($logs as $log) \u003ctr\u003e \u003ctd\u003e{% raw %}{{ $log-\u003euser }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003eip }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003ebrowser }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003eaction }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003etable }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003ecreated_at }}{% endraw %}\u003c/td\u003e \u003ctd\u003e \u003cform action=\"{% raw %}{{ route('log.show',$log-\u003eid) }}{% endraw %}\" method=\"GET\"\u003e @csrf {% raw %}{{ App\\Button::detail($log-\u003eid) }}{% endraw %} \u003c/form\u003e \u003c/td\u003e \u003c/tr\u003e @endforeach \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"card-footer pagination justify-content-center table-responsive\"\u003e {!! $logs-\u003elinks(\"pagination::bootstrap-4\") !!} \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e @endsection LogController.php : namespace App\\Http\\Controllers; use App\\Log; use Illuminate\\Http\\Request; class LogController extends Controller { public function index() { $logs = Log::orderby('created_at','desc')-\u003epaginate(); return view('manage.log.index',compact('logs')); } } ","date":"2020-05-31","objectID":"/laravel-myweb-10/:7:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/#6-log-首頁"},{"categories":["CODE"],"content":"\r7. 取得使用者資訊Log.php public static function get_agent() { $user_agent = isset($_SERVER['HTTP_USER_AGENT']) ? $_SERVER['HTTP_USER_AGENT'] : ''; $browser_name = 'Unknown'; $platform = 'Unknown'; $version = $ub = \"\"; // 取得作業系統資訊 if (preg_match('/linux/i', $user_agent)) { $platform = 'linux'; } else if(preg_match('/macintosh|mac os x/i', $user_agent)) { $platform = 'mac'; } else if(preg_match('/windows|win32/i', $user_agent)) { $platform = 'windows'; } // 取得瀏覽器資訊 if((preg_match('/MSIE/i',$user_agent) || preg_match('/Trident\\/7.0; rv:11.0/i',$user_agent)) \u0026\u0026 !preg_match('/Opera/i',$user_agent)) { $browser_name = 'Internet Explorer'; $ub = \"MSIE\"; } else if(preg_match('/Firefox/i',$user_agent)) { $browser_name = 'Mozilla Firefox'; $ub = \"Firefox\"; } else if(preg_match('/Chrome/i',$user_agent)) { $browser_name = 'Google Chrome'; $ub = \"Chrome\"; } else if(preg_match('/Safari/i',$user_agent)) { $browser_name = 'Apple Safari'; $ub = \"Safari\"; } else if(preg_match('/Opera/i',$user_agent)) { $browser_name = 'Opera'; $ub = \"Opera\"; } else if(preg_match('/Netscape/i',$user_agent)) { $browser_name = 'Netscape'; $ub = \"Netscape\"; } // 瀏覽器版本 $known = array('Version', $ub, 'other'); $pattern = '#(?\u003cbrowser\u003e'.join('|', $known).')[/ ]+(?\u003cversion\u003e[0-9.|a-zA-Z.]*)#'; if (!preg_match_all($pattern, $user_agent, $matches)) { // we have no matching number just continue } // see how many we have $i = count($matches['browser']); if ($i != 1) { //we will have two since we are not using 'other' argument yet //see if version is before or after the name if (strripos($user_agent,\"Version\") \u003c strripos($user_agent,$ub)) { $version = $matches['version'][0]; } else { $version = isset($matches['version'][1]) ? $matches['version'][1] : ''; } } else { $version = $matches['version'][0]; } // check if we have a number if ($version == null || $version == \"\") { $version = \"Unknown\"; } return array( 'name' =\u003e $browser_name, 'version' =\u003e $version, 'platform' =\u003e $platform, 'detail' =\u003e $user_agent ); } ","date":"2020-05-31","objectID":"/laravel-myweb-10/:8:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/#7-取得使用者資訊"},{"categories":["CODE"],"content":"\r8. 寫入LogLog.php : \u003c?php namespace App; use Illuminate\\Database\\Eloquent\\Model; use Illuminate\\Support\\Facades\\Auth; use Illuminate\\Support\\Facades\\DB; use Request; class Log extends Model { ...略... public static function write_log($table,$data,$action = NULL) { $agent = Log::get_agent(); DB::table('logs')-\u003einsert([ 'user' =\u003e (Auth::user()-\u003efirst())['name'], 'ip' =\u003e Request::ip(), 'os' =\u003e $agent['platform'], 'browser' =\u003e $agent['name'], 'browser_detail' =\u003e $agent['detail'], 'action' =\u003e $action ?? Request::method(), 'table' =\u003e $table, 'data' =\u003e json_encode($data, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES), 'created_at' =\u003e now() ]); return true; } } 第13行為進行了何種動作，新增修改或其他。 第15行為新增修改刪除等寫入影響資料庫的資料，使用 json 的方式儲存。 最後在 Controller中引入 Log.php 後就可以使用 write_log() 的方式寫入LOG。 使用 MemberController.php 新增會員當範例 : \u003c?php namespace App\\Http\\Controllers; use Illuminate\\Http\\Request; use Illuminate\\Support\\Facades\\Auth; use Illuminate\\Support\\Facades\\Hash; use Illuminate\\Support\\Facades\\Validator; use Illuminate\\Support\\Facades\\DB; use App\\User; use App\\Log; class MemberController extends Controller { ...略... public function store(Request $request) { $user = new User; $data = $request-\u003evalidate([ 'name' =\u003e ['required', 'string', 'max:255'], 'email' =\u003e ['required', 'string', 'email', 'max:255', 'unique:users'], 'password' =\u003e ['required', 'string', 'min:1', 'confirmed'], 'permission' =\u003e ['required', 'string', 'max:5', 'min:0'], ]); foreach ($request-\u003eexcept('_token','_method','password_confirmation') as $key =\u003e $value) { if ($request-\u003efilled($key) \u0026\u0026 $key == 'password') { $user-\u003epassword = Hash::make($data['password']); } elseif ($request-\u003efilled($key)) { $user-\u003e$key = strip_tags(clean($data[$key])); } } if ($data) { // 寫入log Log::write_log('users',$request-\u003eall()); $user-\u003esave(); } return back()-\u003ewith('success','會員新增成功 !'); } ...略... 第11行引入 Log model 第38行寫入log，影響的資料表為users 實際操作一次新增會員並確認是否產生LOG。 log\r","date":"2020-05-31","objectID":"/laravel-myweb-10/:9:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/#8-寫入log"},{"categories":["CODE"],"content":"\r9. 詳細資料上圖可以看到有一個 Detail 的按鈕，用來看被寫入資料庫的資料。 修改 LogController.php : public function show($id) { $log = Log::where('id',$id)-\u003efirst(); return view('manage.log.detail',compact('log')); } detail.blade.php : @extends('_layouts.manage.app') @section('title', __('Log').__('Detail')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ __('Log').__('Detail') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-unstyled\"\u003e \u003cli\u003e{% raw %}{{ App\\Button::GoBack(route('log.index')) }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e \u003cdiv class=\"table-responsive\"\u003e \u003ctable class=\"table table-hover table-bordered\"\u003e \u003cthead\u003e \u003ctr class=\"table-info active\"\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ __('Item') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ __('Data') }}{% endraw %}\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003e{% raw %}{{ __('Member') }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003euser }}{% endraw %}\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e{% raw %}{{ __('IP') }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003eip }}{% endraw %}\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e{% raw %}{{ __('Operating system') }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003eos }}{% endraw %}\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e{% raw %}{{ __('Browser') }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003ebrowser }}{% endraw %}\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e{% raw %}{{ __('Browser').__('Detail') }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003ebrowser_detail }}{% endraw %}\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e{% raw %}{{ __('Action') }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003eaction }}{% endraw %}\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e{% raw %}{{ __('Table') }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003etable }}{% endraw %}\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e{% raw %}{{ __('Data') }}{% endraw %}\u003c/td\u003e \u003ctd\u003e\u003cpre\u003e{% raw %}{{ $log-\u003edata }}{% endraw %}\u003c/pre\u003e\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e{% raw %}{{ __('Created_at') }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $log-\u003ecreated_at }}{% endraw %}\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"card-footer\"\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e @endsection 現在只要點 Detail 按鈕後就可以看到以下畫面 : detail\r其中資料欄位就是新增會員所寫入的資料。 ","date":"2020-05-31","objectID":"/laravel-myweb-10/:10:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/#9-詳細資料"},{"categories":["CODE"],"content":"\r10. 結語叮叮結束🚗 這裡有一個問題，可以看到在 detail 的資料部分，\"password\": \"Pa$$w0rd!\" ， 表示你剛剛輸入的密碼沒有被 hash 處理到，這是因為上面控制器寫入LOG使用的是 $request-\u003eall() ， $request-\u003eall() 是處理前的資料，只要改成 Log::write_log('users',$user); 問題即可解決。 ","date":"2020-05-31","objectID":"/laravel-myweb-10/:11:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","log","htmlpurifier"],"title":"Laravel Backend Control Website - 10","uri":"/laravel-myweb-10/#10-結語"},{"categories":["CODE"],"content":"Laravel XSS Defense by use Htmlpurifier","date":"2020-05-22","objectID":"/laravel-myweb-9/","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","request","XSS","htmlpurifier"],"title":"Laravel Backend Control Website - 9","uri":"/laravel-myweb-9/"},{"categories":["CODE"],"content":" Laravel XSS Defense by use Htmlpurifier ","date":"2020-05-22","objectID":"/laravel-myweb-9/:0:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","request","XSS","htmlpurifier"],"title":"Laravel Backend Control Website - 9","uri":"/laravel-myweb-9/#"},{"categories":["CODE"],"content":"\r前言在 第八篇 中的結尾提到為什麼要把儲存寫的比較複雜，這是因為要防止 XSS 的攻擊。 這篇就講如何在 Controller 中防禦 XSS 。 ","date":"2020-05-22","objectID":"/laravel-myweb-9/:1:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","request","XSS","htmlpurifier"],"title":"Laravel Backend Control Website - 9","uri":"/laravel-myweb-9/#前言"},{"categories":["CODE"],"content":"\r1. XSS (Cross-site scripting)\r注意\r「知己知彼，百戰百勝」\rXSS 就是利用 Javascript 等語言方式在網站注入指令，進而使網站無法運作或者竊取機敏資料。 在 Laravel 中雖然內建 {% raw %}{{ $data }}{% endraw %} 的方式達成 htmlspecialchars() ， 但這是在輸出的部分。 如果再資料被寫入的時候就提早防禦，是不是更好呢? ","date":"2020-05-22","objectID":"/laravel-myweb-9/:2:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","request","XSS","htmlpurifier"],"title":"Laravel Backend Control Website - 9","uri":"/laravel-myweb-9/#1-xss-cross-site-scripting"},{"categories":["CODE"],"content":"\r2. Htmlpurifier這次就介紹一個套件可以在輸入或輸出的時候先將資料進行過濾，那就是 HtmlPurifier。 一款可以自訂參數並支援 Laravel 的過濾 XSS 套件。 安裝 : composer require mews/purifier 接著由於我們使用的是Laravel 5.8 的版本，所以執行以下指令 : php artisan vendor:publish --provider=\"Mews\\Purifier\\PurifierServiceProvider\" 即可生成 config/purifier.php 檔案，在這個檔案內設定調整要過濾的選項。 最後只要使用 clean() 或者 Purifier::clean() 的方式就可以將你討厭的東西過濾掉了。 以新增會員的 store() 作為範例 : public function store(Request $request) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '5') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } $error = 0; $user = new User; $data = $request-\u003evalidate([ 'name' =\u003e ['required', 'string', 'max:255'], 'email' =\u003e ['required', 'string', 'email', 'max:255', 'unique:users'], 'password' =\u003e ['required', 'string', 'min:1', 'confirmed'], 'permission' =\u003e ['required', 'string', 'max:5', 'min:0'], ]); foreach ($request-\u003eexcept('_token','_method','password_confirmation') as $key =\u003e $value) { if ($request-\u003efilled($key) \u0026\u0026 $key == 'password') { $user-\u003epassword = Hash::make($data['password']); } elseif ($request-\u003efilled($key)) { $user-\u003e$key = strip_tags(clean($data[$key])); if ($user-\u003e$key == '') { $error += 1; } } } if ($error == 0) { $user-\u003esave(); } else{ return back()-\u003ewithInput()-\u003ewith('warning', '請確認輸入 !'); } return back()-\u003ewith('success','會員新增成功 !'); } 16行將不要的輸入排除。 18行將 Password 加密處理。 21行將其餘輸入逐一進行過濾，加上 strip_tags 是因為 clean() 之後會留下 \u003cp\u003e\u003c/p\u003e ，所以將之排除。 22行判斷如果過濾後為空值，則錯誤。 ","date":"2020-05-22","objectID":"/laravel-myweb-9/:3:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","request","XSS","htmlpurifier"],"title":"Laravel Backend Control Website - 9","uri":"/laravel-myweb-9/#2-htmlpurifier"},{"categories":["CODE"],"content":"\r結語請注意不要在頁面管理的 content 使用 strip_tags，會很可怕。 在所有的Controller 中都加入 Htmlpurifier 吧 ! 下一篇將介紹抓戰犯的工具 LOG 🤪 ","date":"2020-05-22","objectID":"/laravel-myweb-9/:4:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","request","XSS","htmlpurifier"],"title":"Laravel Backend Control Website - 9","uri":"/laravel-myweb-9/#結語"},{"categories":["CODE"],"content":"客製化程式碼高亮 - Customize Code Highlighter","date":"2020-05-17","objectID":"/prism-highlighter/","series":null,"tags":["javascript","css","highlight","prism","code"],"title":"Prism - Customize Code Highlighter","uri":"/prism-highlighter/"},{"categories":["CODE"],"content":" 客製化程式碼高亮 - Customize Code Highlighter ","date":"2020-05-17","objectID":"/prism-highlighter/:0:0","series":null,"tags":["javascript","css","highlight","prism","code"],"title":"Prism - Customize Code Highlighter","uri":"/prism-highlighter/#"},{"categories":["CODE"],"content":"\r前言之前用的 Rough 有點不習慣，所以找到 Prism ，一個客製化的程式碼高亮的應用。 ","date":"2020-05-17","objectID":"/prism-highlighter/:1:0","series":null,"tags":["javascript","css","highlight","prism","code"],"title":"Prism - Customize Code Highlighter","uri":"/prism-highlighter/#前言"},{"categories":["CODE"],"content":"\r1. 下載地址https://prismjs.com/download.html 勾選完需求後，就可以在最下方下載 js 及 css 檔案。 ","date":"2020-05-17","objectID":"/prism-highlighter/:2:0","series":null,"tags":["javascript","css","highlight","prism","code"],"title":"Prism - Customize Code Highlighter","uri":"/prism-highlighter/#1-下載地址"},{"categories":["CODE"],"content":"\r2. 插件Prism 提供了一些插件輔助，比如顯示程式碼行數、程式碼語言別、單行高亮…等等。 以下提供一些我使用的插件。 ","date":"2020-05-17","objectID":"/prism-highlighter/:3:0","series":null,"tags":["javascript","css","highlight","prism","code"],"title":"Prism - Customize Code Highlighter","uri":"/prism-highlighter/#2-插件"},{"categories":["CODE"],"content":"\r3. 程式碼行數 Line Numbers在要高亮的內容要加入 line-numbers 的 class類別，如下 : \u003carticle class=\"post-content line-numbers\" itemprop=\"articleBody\"\u003e {% raw %}{{ content }}{% endraw %} \u003c/article\u003e ","date":"2020-05-17","objectID":"/prism-highlighter/:4:0","series":null,"tags":["javascript","css","highlight","prism","code"],"title":"Prism - Customize Code Highlighter","uri":"/prism-highlighter/#3-程式碼行數-line-numbers"},{"categories":["CODE"],"content":"\r4. 複製 Copy to Clipboard Button沒重點，同時勾選 Copy to Clipboard Button 及 Toolbar 後引入 js 檔即可。 ","date":"2020-05-17","objectID":"/prism-highlighter/:5:0","series":null,"tags":["javascript","css","highlight","prism","code"],"title":"Prism - Customize Code Highlighter","uri":"/prism-highlighter/#4-複製-copy-to-clipboard-button"},{"categories":["CODE"],"content":"\r5. 結構樹 Treeview勾選 Treeview 後引入 js 檔，高亮語言選擇 treeview 即可。 {% raw %}{% highlight treeview %}{% endraw %} ...程式碼... {% raw %}{% endhighlight %}{% endraw %} ","date":"2020-05-17","objectID":"/prism-highlighter/:6:0","series":null,"tags":["javascript","css","highlight","prism","code"],"title":"Prism - Customize Code Highlighter","uri":"/prism-highlighter/#5-結構樹-treeview"},{"categories":["CODE"],"content":"長時間輪詢PHP+MySQL範例 - Long Polling PHP + MySQL Example","date":"2020-05-13","objectID":"/long-polling-example/","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling Database Example","uri":"/long-polling-example/"},{"categories":["CODE"],"content":" 長時間輪詢PHP+MySQL範例 - Long Polling PHP + MySQL Example ","date":"2020-05-13","objectID":"/long-polling-example/:0:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling Database Example","uri":"/long-polling-example/#"},{"categories":["CODE"],"content":"\r前言Hello 大家，這一篇 提到了一個文件更新的範例來示範 Long Polling。 這篇打算利用資料庫新增的方式做一個範例。 ","date":"2020-05-13","objectID":"/long-polling-example/:1:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling Database Example","uri":"/long-polling-example/#前言"},{"categories":["CODE"],"content":"\r1. 資料結構 php-long-polling/ └── client/ ├── client.js └── client.html └── server/ ├── database.php └── server.php └── index.php ","date":"2020-05-13","objectID":"/long-polling-example/:2:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling Database Example","uri":"/long-polling-example/#1-資料結構"},{"categories":["CODE"],"content":"\r2. 資料庫可以用phpmyadmin手動新增或直接輸入以下SQL指令 : CREATE TABLE `admin` ( `id` int(11) NOT NULL, `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL, `password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL ) database.php : \u003c?php $db_host = \"localhost\"; $db_user = \"自行輸入對應數值\"; $db_pass = \"自行輸入對應數值\"; $db_name = \"自行輸入對應數值\"; $dbconnect = \"mysql:host=\".$db_host.\";dbname=\".$db_name; $dbgo = new PDO($dbconnect, $db_user, $db_pass); ?\u003e ","date":"2020-05-13","objectID":"/long-polling-example/:3:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling Database Example","uri":"/long-polling-example/#2-資料庫"},{"categories":["CODE"],"content":"\r3. 資料新增index.php : \u003c?php include_once('./server/database.php'); if ($_POST) { $sql = \"INSERT INTO `admin` (`password`,`name`) VALUES ('\".$_POST['name'].\"','\".$_POST['password'].\"')\"; $result = $dbgo-\u003equery($sql); } ?\u003e \u003cform method=\"post\"\u003e name : \u003cinput type=\"text\" name=\"name\"\u003e password : \u003cinput type=\"password\" name=\"password\"\u003e \u003cinput type=\"submit\"\u003e \u003c/form\u003e ","date":"2020-05-13","objectID":"/long-polling-example/:4:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling Database Example","uri":"/long-polling-example/#3-資料新增"},{"categories":["CODE"],"content":"\r4. 伺服端server.php : include_once('database.php'); set_time_limit(0); while (true) { // 客戶端發Request $last_ajax_call = isset($_GET['max']) ? $_GET['max'] : null; // 取得當前資料庫資料 $sql = \"select * from `admin`\"; $data = $dbgo-\u003equery($sql); $row = $data-\u003efetchAll(PDO::FETCH_ASSOC); $max_id = array(); foreach ($row as $key =\u003e $value) { array_push($max_id, $value['id']); } // 取出最大id $max_id = max($max_id); // 如果當前數值大於客戶端的request表示新增 if ($last_ajax_call == null || $max_id \u003e $max) { $result = array( 'data_from_database' =\u003e json_encode($row), 'id' =\u003e $max_id ); // 將資料轉成JSON格式，並呈現結果 $json = json_encode($result); echo $json; break; } else { sleep(1); continue; } } 這次使用的找出資料庫新增的方法是找出最大 ID，因為是 Auto Increase 。 ","date":"2020-05-13","objectID":"/long-polling-example/:5:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling Database Example","uri":"/long-polling-example/#4-伺服端"},{"categories":["CODE"],"content":"\r5. 客戶端client.php : function getContent(id) { var queryString = {'id' : id}; $.ajax( { type: 'GET', url: 'http://127.0.0.1/php-long-polling/server/server.php', data: queryString, success: function(data){ var obj = jQuery.parseJSON(data); var user = ''; $.each(jQuery.parseJSON(obj.data_from_database), function(key, value){ user += '\u003ctr\u003e'; user += '\u003ctd\u003e'+value.id+'\u003c/td\u003e'; user += '\u003ctd\u003e'+value.name+'\u003c/td\u003e'; user += '\u003ctd\u003e'+value.password+'\u003c/td\u003e'; user += '\u003c/tr\u003e'; }); $('#response').html(user); getContent(obj.id); } } ); } $(function() { getContent(); }); 概念跟之前範例一樣，狂丟 Request，把收到的資料轉成表格輸出並打印在 #response。 client.html : \u003chtml\u003e \u003chead\u003e \u003cscript type=\"text/javascript\" src=\"http://code.jquery.com/jquery.min.js\"\u003e\u003c/script\u003e \u003cscript type=\"text/javascript\" src=\"client.js\"\u003e\u003c/script\u003e \u003c/head\u003e \u003cbody\u003e \u003ch1\u003eResponse from server:\u003c/h1\u003e \u003ctable id=\"response\"\u003e \u003ctr\u003e \u003cth\u003eid\u003c/th\u003e \u003cth\u003ename\u003c/th\u003e \u003cth\u003epassword\u003c/th\u003e \u003c/tr\u003e \u003c/table\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2020-05-13","objectID":"/long-polling-example/:6:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling Database Example","uri":"/long-polling-example/#5-客戶端"},{"categories":["CODE"],"content":"\r6. 結語 叮叮結束，可以想想刪除怎麼做🥱 ","date":"2020-05-13","objectID":"/long-polling-example/:7:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling Database Example","uri":"/long-polling-example/#6-結語"},{"categories":["CODE"],"content":"長時間輪詢 - Long Polling","date":"2020-05-12","objectID":"/long-polling/","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling","uri":"/long-polling/"},{"categories":["CODE"],"content":" 長時間輪詢 - Long Polling ","date":"2020-05-12","objectID":"/long-polling/:0:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling","uri":"/long-polling/#"},{"categories":["CODE"],"content":"\r前言PHP要做即時(Real-time)方式有很多種，Polling、Long Polling、WebSocket…等等。 這次分享一個簡單的Long Polling範例 。 ","date":"2020-05-12","objectID":"/long-polling/:1:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling","uri":"/long-polling/#前言"},{"categories":["CODE"],"content":"\r範例說明如果物件(data.txt)改變了，client.php將自動更新，不需透過重新整理。 client.js 持續丟 request 給 server.php ， 若無限循環的 server.php 發現 client 的物件(data.txt)時間戳小於自己， 就將更新後的物件資料(json)傳送給 client ，完成自動更新。 ","date":"2020-05-12","objectID":"/long-polling/:2:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling","uri":"/long-polling/#範例說明"},{"categories":["CODE"],"content":"\r資料來源php-long-polling ","date":"2020-05-12","objectID":"/long-polling/:3:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling","uri":"/long-polling/#資料來源"},{"categories":["CODE"],"content":"\r結語下次我用PHP + MySQL 做一個範例。 ","date":"2020-05-12","objectID":"/long-polling/:4:0","series":null,"tags":["php","javascript","request","ajax","real-time","long-polling"],"title":"Long Polling","uri":"/long-polling/#結語"},{"categories":["CODE"],"content":"Laravel 頁面管理 - Page Manager","date":"2020-05-10","objectID":"/laravel-myweb-8/","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/"},{"categories":["CODE"],"content":" Laravel 頁面管理 - Page Manager ","date":"2020-05-10","objectID":"/laravel-myweb-8/:0:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#"},{"categories":["CODE"],"content":"\r前言Hello 大家 ! 在 第六篇 創建了導覽列管理，而那時候將導覽列分成兩個類型，分別是 導覽目錄 以及 一般頁面 。 一般頁面 : 點擊後直接導向該頁面。 導覽目錄 : 點擊後產生下拉式選單，內容為選單。 而這篇要做的就是 一般頁面 的頁面管理。 ","date":"2020-05-10","objectID":"/laravel-myweb-8/:1:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#前言"},{"categories":["CODE"],"content":"\r1. 新增Controller、Model、Migration // 一次性建立 php artisan make:model Page -mcr ","date":"2020-05-10","objectID":"/laravel-myweb-8/:2:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#1-新增controllermodelmigration"},{"categories":["CODE"],"content":"\r2. 修改Migration \u003c?php use Illuminate\\Support\\Facades\\Schema; use Illuminate\\Database\\Schema\\Blueprint; use Illuminate\\Database\\Migrations\\Migration; class CreatePagesTable extends Migration { public function up() { Schema::create('pages', function (Blueprint $table) { $table-\u003ebigIncrements('id'); $table-\u003estring('menu_id')-\u003enullable()-\u003ecomment('選單id'); $table-\u003estring('editor')-\u003ecomment('編輯者'); $table-\u003estring('title')-\u003ecomment('標題'); $table-\u003estring('url')-\u003ecomment('頁面網址'); $table-\u003elongText('content')-\u003enullable()-\u003ecomment('頁面內容'); $table-\u003eboolean('is_open')-\u003edefault(true)-\u003ecomment('是否開放'); $table-\u003etimestamps(); }); } public function down() { Schema::dropIfExists('pages'); } } 之後會建立選單連結頁面，所以先加入選單ID欄位。 然後寫入資料庫 : php artisan migrate ","date":"2020-05-10","objectID":"/laravel-myweb-8/:3:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#2-修改migration"},{"categories":["CODE"],"content":"\r3. 修改Model \u003c?php namespace App; use Illuminate\\Database\\Eloquent\\Model; class Page extends Model { protected $table = 'pages'; protected $primaryKey = 'id'; protected $fillable = [ \"name\", \"menu_id\" ,\"title\", \"url\", \"content\", \"is_open\", ]; } ","date":"2020-05-10","objectID":"/laravel-myweb-8/:4:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#3-修改model"},{"categories":["CODE"],"content":"\r4. 加入路由 Route::prefix('manage')-\u003emiddleware('auth','admin')-\u003egroup(function(){ Route::resource('member', 'MemberController'); Route::resource('navbar', 'NavbarController'); Route::resource('page', 'PageController'); }); ","date":"2020-05-10","objectID":"/laravel-myweb-8/:5:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#4-加入路由"},{"categories":["CODE"],"content":"\r5. 建立視圖 views/ ├── _layouts/ ├── _partials/ ├── auth/ └── manage/ └── member/ └── navbar/ └── page/ ├── create.blade.php ├── edit.blade.php └── index.blade.php ","date":"2020-05-10","objectID":"/laravel-myweb-8/:6:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#5-建立視圖"},{"categories":["CODE"],"content":"\r6. 頁面管理先建立頁面管理首頁 index.blade.php : @extends('_layouts.manage.app') @section('title', trans('Page').trans('Manage')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ trans('Page').trans('Manage') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-inline\"\u003e \u003cli class=\"list-inline-item\"\u003e{% raw %}{{ App\\Button::Create() }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e \u003cdiv class=\"alert alert-warning\" role=\"alert\"\u003e 1. 前台排序以頁面修改日期為主。\u003cbr\u003e 2. 頁面網址唯一，用途為導向該頁面。 \u003c/div\u003e \u003cdiv class=\"table-responsive\"\u003e \u003ctable id=\"data\" class=\"table table-hover table-bordered text-center\"\u003e \u003cthead\u003e \u003ctr class=\"table-info active\"\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Editor') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Title') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Page').trans('Url') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Is_open') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Action') }}{% endraw %}\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e @foreach ($all_pages as $page) \u003ctr\u003e \u003ctd\u003e{% raw %}{{ $page-\u003eeditor }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $page-\u003etitle }}{% endraw %}\u003c/td\u003e \u003ctd\u003e {% raw %}{{ $page-\u003eurl }}{% endraw %} \u003c/td\u003e \u003ctd\u003e \u003cfont color=\"{% raw %}{{App\\Enum::is_open['color'][$page-\u003eis_open]}}{% endraw %}\"\u003e\u003ci class=\"fas fa-{% raw %}{{App\\Enum::is_open['label'][$page-\u003eis_open]}}{% endraw %}\"\u003e\u003c/i\u003e\u003c/font\u003e \u003c/td\u003e \u003ctd\u003e \u003cform action=\"{% raw %}{{ route('page.edit',$page-\u003eid) }}{% endraw %}\" method=\"GET\"\u003e @csrf {% raw %}{{ App\\Button::edit($page-\u003eid) }}{% endraw %} \u003c/form\u003e \u003cform action=\"{% raw %}{{ route('page.destroy',$page-\u003eid) }}{% endraw %}\" method=\"POST\"\u003e @method('DELETE') @csrf {% raw %}{{ App\\Button::deleting($page-\u003eid) }}{% endraw %} \u003c/form\u003e \u003c/td\u003e \u003c/tr\u003e @endforeach \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e @endsection PageController.php : \u003c?php namespace App\\Http\\Controllers; use Illuminate\\Http\\Request; use Illuminate\\Support\\Facades\\Auth; use Illuminate\\Support\\Facades\\DB; use App\\Page; use App\\Navbar; ...略... public function index() { $all_pages = DB::table('pages')-\u003eget(); return view('manage.page.index',compact('all_pages')); } ","date":"2020-05-10","objectID":"/laravel-myweb-8/:7:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#6-頁面管理"},{"categories":["CODE"],"content":"\r7. 加入編輯器在新增文章時需要使用編輯器輔助，可以使用像是 Ckeditor 或 TinyMCE 等等的編輯器。 這次我使用 Summernote 當作範例，在 manage/app.blade.php 中加入 : \u003c!-- include libraries(jQuery) --\u003e \u003cscript src=\"https://code.jquery.com/jquery-3.4.1.min.js\" crossorigin=\"anonymous\"\u003e\u003c/script\u003e \u003cscript src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"\u003e\u003c/script\u003e \u003c!-- include summernote css/js --\u003e \u003clink href=\"https://cdn.jsdelivr.net/npm/summernote@0.8.16/dist/summernote-bs4.min.css\" rel=\"stylesheet\"\u003e \u003cscript src=\"https://cdn.jsdelivr.net/npm/summernote@0.8.16/dist/summernote-bs4.min.js\"\u003e\u003c/script\u003e ","date":"2020-05-10","objectID":"/laravel-myweb-8/:8:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#7-加入編輯器"},{"categories":["CODE"],"content":"\r8. 頁面新增create.blade.php : @extends('_layouts.manage.app') @section('title', trans('Page').trans('Create')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cform action=\"{% raw %}{{ route('page.store') }}{% endraw %}\" method=\"POST\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ trans('Page').trans('Create') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-unstyled\"\u003e \u003cli\u003e{% raw %}{{ App\\Button::GoBack(route('page.index')) }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e @csrf \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"title\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Title') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput type=\"text\" class=\"form-control @error('title') is-invalid @enderror\" id=\"title\" name=\"title\" value=\"{% raw %}{{ old('title') }}{% endraw %}\" placeholder=\"{% raw %}{{ trans('Title') }}{% endraw %}\"\u003e @error('title') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"url\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Page').trans('Url') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput type=\"text\" class=\"form-control @error('url') is-invalid @enderror\" id=\"url\" name=\"url\" value=\"{% raw %}{{ old('url') }}{% endraw %}\" placeholder=\"{% raw %}{{ trans('Page').trans('Url') }}{% endraw %}\"\u003e @error('url') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"content\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Content') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-12\"\u003e \u003ctextarea id=\"summernote\" name=\"editordata\" class=\"form-control\" \u003e{!! old('content') !!}\u003c/textarea\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"is_open\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Is_open') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"form-inline col-md-6\"\u003e \u003cdiv class=\"custom-control custom-radio custom-control-inline\"\u003e \u003cinput class=\"custom-control-input\" type=\"radio\" name=\"is_open\" id=\"is_open1\" value=\"1\"\u003e \u003clabel class=\"custom-control-label\" for=\"is_open1\"\u003e{% raw %}{{ trans('Yes') }}{% endraw %}\u003c/label\u003e \u003c/div\u003e \u003cdiv class=\"custom-control custom-radio custom-control-inline\"\u003e \u003cinput class=\"custom-control-input\" type=\"radio\" name=\"is_open\" id=\"is_open2\" value=\"0\"\u003e \u003clabel class=\"custom-control-label\" for=\"is_open2\"\u003e{% raw %}{{ trans('No') }}{% endraw %}\u003c/label\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"card-footer text-center\"\u003e \u003cinput type=\"submit\" class=\"btn btn-primary\" value=\"{% raw %}{{ trans('Create') }}{% endraw %}\"\u003e \u003c/div\u003e \u003c/form\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e @endsection @section('script') @parent \u003cscript type=\"text/javascript\"\u003e $(document).ready(function() { $('#summernote').summernote(); $('.note-btn').removeAttr('title'); }); \u003c/script\u003e @show PageController.php : public function create() { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '2') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } return view('manage.page.create'); } public function store(Request $request) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '2') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } $error = 0; $page = new Page; $data = $request-\u003evalidate([ 'menu_id' =\u003e ['nullable'], 'title' =\u003e ['required', 'string', 'max:255'], 'url' =\u003e ['required', 'string', 'max:255','unique:pages,url'], 'is_open' =\u003e ['required'], ]); foreach ($request-\u003eexcept('_token', '_method', 'files') as $key =\u003e $value) { if ($request-\u003efilled($key) \u0026\u0026 $request-\u003efilled($key) != NULL \u0026\u0026 $key != 'content') { $page-\u003e$key = $data[$key]; if ($page-\u003e$key == '') { $error += 1; } } else{ $page-\u003e$key = NULL; } } $page-\u003econtent = $request-\u003einput('content'); $page-\u003eeditor = Auth::user()-\u003ename; if ($error == 0) { $page-\u003esave(); } else{ return back()-\u003ewithInput()-\u003ewith('warning', '請確認輸入 !'); } return back()-\u003ewith('succ","date":"2020-05-10","objectID":"/laravel-myweb-8/:9:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#8-頁面新增"},{"categories":["CODE"],"content":"\r9. 頁面修改edit.blade.php : @extends('_layouts.manage.app') @section('title', trans('Page').trans('Edit')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ trans('Page').trans('Edit') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-unstyled\"\u003e \u003cli\u003e{% raw %}{{ App\\Button::GoBack(route('page.index')) }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e \u003cform method=\"POST\" action=\"{% raw %}{{ route('page.update' , $page-\u003eid) }}{% endraw %}\"\u003e @csrf @method('PUT') \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"title\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Title') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput id=\"title\" type=\"text\" class=\"form-control @error('title') is-invalid @enderror\" name=\"title\" value=\"{% raw %}{{ $page-\u003etitle }}{% endraw %}\" required autocomplete=\"{% raw %}{{ trans('Title') }}{% endraw %}\" autofocus\u003e @error('title') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"url\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Page').trans('Url') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput id=\"url\" type=\"text\" class=\"form-control @error('url') is-invalid @enderror\" name=\"url\" value=\"{% raw %}{{ $page-\u003eurl }}{% endraw %}\" required autocomplete=\"{% raw %}{{ trans('Page').trans('Url') }}{% endraw %}\" autofocus readonly\u003e @error('url') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"content\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Content') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-12\"\u003e \u003ctextarea id=\"summernote\" name=\"content\" class=\"form-control ckeditor\" \u003e{% raw %}{{ $page-\u003econtent }}{% endraw %}\u003c/textarea\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"is_open\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Is_open') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"form-inline col-md-6\"\u003e \u003cdiv class=\"custom-control custom-radio custom-control-inline\"\u003e \u003cinput class=\"custom-control-input\" type=\"radio\" name=\"is_open\" id=\"is_open1\" value=\"1\" {% raw %}{{ ($page-\u003eis_open==\"1\")? \"checked\" : \"\" }}{% endraw %}\u003e \u003clabel class=\"custom-control-label\" for=\"is_open1\"\u003e{% raw %}{{ trans('Yes') }}{% endraw %}\u003c/label\u003e \u003c/div\u003e \u003cdiv class=\"custom-control custom-radio custom-control-inline\"\u003e \u003cinput class=\"custom-control-input\" type=\"radio\" name=\"is_open\" id=\"is_open2\" value=\"0\" {% raw %}{{ ($page-\u003eis_open==\"0\")? \"checked\" : \"\" }}{% endraw %}\u003e \u003clabel class=\"custom-control-label\" for=\"is_open2\"\u003e{% raw %}{{ trans('No') }}{% endraw %}\u003c/label\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003cdiv class=\"col-md-4\"\u003e \u003cinput type=\"submit\" class=\"btn btn-primary\" value=\"送出\"\u003e \u003c/div\u003e \u003c/div\u003e \u003c/form\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e @endsection @section('script') @parent \u003cscript type=\"text/javascript\"\u003e $('#summernote').summernote(); $('.note-btn').removeAttr('title'); \u003c/script\u003e @show PageController.php : public function edit($id) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '3') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } $page = Page::where('id',$id)-\u003efirst(); $navbars = Navbar::where('type', '=', '1')-\u003eget(); return view('manage.page.edit',compact('page','navbars')); } public function update(Request $request, $id) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '3') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } $error = 0; $page = Page::where('id',$id)-\u003efirst(); $data = $this-\u003evalidate($request, [ 'menu_id' =\u003e ['nullable'], 'title' =\u003e ['required', 'string', 'max:255'], 'url' =\u003e ['required', 'string', 'max:255'], 'is_open' =\u003e ['required'], ]); foreach ($request-\u003eexcept('_token','_method','files') as $key =\u003e $value) { if ($request-\u003efilled($key) \u0026\u0026 $request-\u003efilled($key) != NULL \u0026\u0026 $key != 'content') { $pa","date":"2020-05-10","objectID":"/laravel-myweb-8/:10:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#9-頁面修改"},{"categories":["CODE"],"content":"\r10. 頁面刪除PageController.php : public function destroy($id) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '4') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } Page::destroy($id); return back()-\u003ewith('success','刪除頁面成功 !'); } ","date":"2020-05-10","objectID":"/laravel-myweb-8/:11:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#10-頁面刪除"},{"categories":["CODE"],"content":"\r11. 結語叮叮結束😁 下次來聊聊前台顯示以及為什麼 Controller 的 store() 和 update() 都要寫這麼醜。 一般不都 Page::create($request-\u003eall()) 跟 Page::updateOrCreate($request-\u003eall()) 直接搞定嗎 ? ","date":"2020-05-10","objectID":"/laravel-myweb-8/:12:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 8","uri":"/laravel-myweb-8/#11-結語"},{"categories":["EXECUTION"],"content":"在Windows環境安裝Swoole - Install Swoole on Windows","date":"2020-05-06","objectID":"/swoole-install-on-windows/","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/"},{"categories":["EXECUTION"],"content":" 在Windows環境安裝Swoole - Install Swoole on Windows ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:0:0","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#"},{"categories":["EXECUTION"],"content":"\r前言 最近想玩 websocket，所以找了一個套件 Swoole 來試看看。可是Swoole一般是使用在Linux環境，所以就要使用 Cygwin 來實現了。 ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:1:0","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#前言"},{"categories":["EXECUTION"],"content":"\r本篇重點 安裝 Cygwin 安裝 Swoole 測試 Swoole ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:2:0","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#本篇重點"},{"categories":["EXECUTION"],"content":"\r1. 安裝 Cygwin Cygwin 下載地址：https://www.cygwin.com/ 以下是我安裝的步驟，可以根據自身需求更改。 ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:0","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#1-安裝-cygwin"},{"categories":["EXECUTION"],"content":"\rStep 1\r","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:1","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-1"},{"categories":["EXECUTION"],"content":"\rStep 2\r","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:2","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-2"},{"categories":["EXECUTION"],"content":"\rStep 3\r","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:3","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-3"},{"categories":["EXECUTION"],"content":"\rStep 4\r","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:4","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-4"},{"categories":["EXECUTION"],"content":"\rStep 5. 使用鏡像來源\r","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:5","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-5-使用鏡像來源"},{"categories":["EXECUTION"],"content":"\rStep 6. 安裝 binutils\r","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:6","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-6-安裝-binutils"},{"categories":["EXECUTION"],"content":"\rStep 7. 安裝 gcc-core，gcc-g++\r","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:7","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-7-安裝-gcc-coregcc-g"},{"categories":["EXECUTION"],"content":"\rStep 8. 安裝 gdb\r","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:8","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-8-安裝-gdb"},{"categories":["EXECUTION"],"content":"\rStep 9. 安裝 php\r","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:9","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-9-安裝-php"},{"categories":["EXECUTION"],"content":"\rStep 10. 安裝 pcre-devel\r","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:10","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-10-安裝-pcre-devel"},{"categories":["EXECUTION"],"content":"\rStep 11. 安裝 autoconf\r","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:11","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-11-安裝-autoconf"},{"categories":["EXECUTION"],"content":"\rStep 12. 安裝 pcre\r","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:12","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-12-安裝-pcre"},{"categories":["EXECUTION"],"content":"\rStep 13. 下一步到底","date":"2020-05-06","objectID":"/swoole-install-on-windows/:3:13","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-13-下一步到底"},{"categories":["EXECUTION"],"content":"\r2. 安裝 SwooleSwoole 下載地址 : https://pecl.php.net/package/swoole ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:4:0","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#2-安裝-swoole"},{"categories":["EXECUTION"],"content":"\rStep 1. 解壓縮下載好的檔案到 cygwin64/home/ 底下 ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:4:1","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-1-解壓縮下載好的檔案到-cygwin64home-底下"},{"categories":["EXECUTION"],"content":"\rStep 2. 執行 Cygwin打開 ./cygwin64/Cygwin.bat ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:4:2","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-2-執行-cygwin"},{"categories":["EXECUTION"],"content":"\rStep 3. 進入壓縮後的Swoole資料夾 cd /home/swoole-4.5.0 ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:4:3","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-3-進入壓縮後的swoole資料夾"},{"categories":["EXECUTION"],"content":"\rStep 4. 產生編譯文件 configure phpize ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:4:4","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-4-產生編譯文件-configure"},{"categories":["EXECUTION"],"content":"\rStep 5. 安裝 Swoole ./configure \u0026\u0026 make \u0026\u0026 make install ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:4:5","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-5-安裝-swoole"},{"categories":["EXECUTION"],"content":"\rStep 6. 在php.ini文件中加入 extension=swoole.so // 可以使用下面指令找到php.ini檔案位置 php -i | grep php.ini ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:4:6","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-6-在phpini文件中加入-extensionswooleso"},{"categories":["EXECUTION"],"content":"\rStep 7. 查看是否安裝成功 php -m ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:4:7","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#step-7-查看是否安裝成功"},{"categories":["EXECUTION"],"content":"\r3. 測試 Swoole cd /home/swoole-4.5.0/examples/http2 php server.php 打開瀏覽器輸入網址http://127.0.0.1:9501/ 出現下圖則代表成功 : ","date":"2020-05-06","objectID":"/swoole-install-on-windows/:5:0","series":null,"tags":["php","websocket","realtime","cygwin","swoole"],"title":"Install Swoole on Windows","uri":"/swoole-install-on-windows/#3-測試-swoole"},{"categories":["CODE"],"content":"Laravel 拖曳排序、視圖合成器 - Drag Sort、View Composer","date":"2020-05-05","objectID":"/laravel-myweb-7/","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 7","uri":"/laravel-myweb-7/"},{"categories":["CODE"],"content":" Laravel 拖曳排序、視圖合成器 - Drag Sort、View Composer ","date":"2020-05-05","objectID":"/laravel-myweb-7/:0:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 7","uri":"/laravel-myweb-7/#"},{"categories":["CODE"],"content":"\r前言Hello 大家 ! 在 上一篇 提到了視圖合成器(View Composer)以及如何利用拖曳來進行導覽列的排序，這篇就來一一解答。 ","date":"2020-05-05","objectID":"/laravel-myweb-7/:1:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 7","uri":"/laravel-myweb-7/#前言"},{"categories":["CODE"],"content":"\r1. 視圖合成器視圖合成器(View Composer) 提供了一種方法讓你將資料一次性的分享到指定的視圖，上一篇所使用到的 : View::composer(['*'], function ($view) { $navbars = App\\Navbar::where('is_open',1)-\u003eorderby('sort')-\u003eget(); $users = App\\User::all(); $view-\u003ewith('navbars',$navbars); $view-\u003ewith('users',$users); }); 若你想將 $navbars 以及 $users 分享到所有的視圖，就使用['*']。若只想分享到指定視圖，例如管理後台首頁，則使用['manage.index']。 這樣一來就不用再控制器重複宣告資料了。 注意\r但要記得，由於是分享到所視圖，不能和控制器宣告的名字衝突。\r","date":"2020-05-05","objectID":"/laravel-myweb-7/:2:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 7","uri":"/laravel-myweb-7/#1-視圖合成器"},{"categories":["CODE"],"content":"\r2. 拖曳排序要完成拖曳排序，要使用幾個工具 : Datatable jQuery 直接在 manage/app.blade.php 中加入 : \u003cbody\u003e \u003cdiv id=\"app\"\u003e @include('_partials.manage.nav') \u003cmain class=\"py-4\"\u003e @include('_partials.message') @yield('content') \u003c/main\u003e \u003c/div\u003e @section('script') \u003cscript src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js\"\u003e\u003c/script\u003e @show \u003c/body\u003e 上面使用到了 @section('script')...@show 的方法，這樣在子視圖就只要使用 : @section('script') //引入app的js @parent //本頁使用的js \u003cscript\u003e ...略... \u003c/script\u003e @show 首先，要建立排序的視圖，sort.blade.php : @extends('_layouts.manage.app') @section('title', trans('Navbar').trans('Sort')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{trans('Navbar').trans('Sort')}}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-unstyled\"\u003e \u003cli\u003e{% raw %}{{ App\\Button::GoBack(route('navbar.index')) }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e \u003cdiv class=\"alert alert-warning\" role=\"alert\"\u003e 1. 請直接拖曳目標列進行排序。\u003cbr\u003e 2. 調整完請點重新整理進行確認。 \u003c/div\u003e \u003ctable id=\"table\" class=\"table table-hover table-bordered text-center\"\u003e \u003cthead\u003e \u003ctr class=\"table-info active\"\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{trans('Navbar').trans('Name')}}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Type') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Sort') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Is_open') }}{% endraw %}\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody id=\"tablecontents\"\u003e @foreach ($navbars as $navbar) \u003ctr class=\"row1\" data-id=\"{% raw %}{{ $navbar-\u003eid }}{% endraw %}\"\u003e \u003ctd class=\"pl-3\"\u003e{% raw %}{{ $navbar-\u003ename }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{App\\Enum::type['navbar'][$navbar-\u003etype]}}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $navbar-\u003esort }}{% endraw %}\u003c/td\u003e \u003ctd\u003e\u003cfont color=\"{% raw %}{{App\\Enum::is_open['color'][$navbar-\u003eis_open]}}{% endraw %}\"\u003e\u003ci class=\"fas fa-{% raw %}{{App\\Enum::is_open['label'][$navbar-\u003eis_open]}}{% endraw %}\"\u003e\u003c/i\u003e\u003c/font\u003e\u003c/td\u003e \u003c/tr\u003e @endforeach \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e \u003cdiv class=\"card-footer text-center\"\u003e \u003ch5\u003e\u003cbutton class=\"btn btn-success btn-sm\" onclick=\"window.location.reload()\"\u003e{% raw %}{{ trans('Refresh') }}{% endraw %}\u003c/button\u003e\u003c/h5\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e @endsection @section('script') @parent \u003cscript type=\"text/javascript\"\u003e $(function () { // $(\"#table\").DataTable(); $(\"#tablecontents\").sortable({ items: \"tr\", cursor: 'move', opacity: 0.6, update: function() { sendOrderToServer(); } }); function sendOrderToServer() { var order = []; var token = $('meta[name=\"csrf-token\"]').attr('content'); $('tr.row1').each(function(index,element) { order.push({ id: $(this).attr('data-id'), position: index+1 }); }); $.ajax({ type: \"POST\", dataType: \"json\", url: \"{% raw %}{{ url('navbar-sortable') }}{% endraw %}\", data: { order: order, _token: token }, success: function(response) { if (response.status == \"success\") { console.log(response); } else { console.log(response); } } }); } }); \u003c/script\u003e @show 接著在，index.blade.php 加入按鈕 : \u003cli class=\"list-inline-item\"\u003e{% raw %}{{ App\\Button::To(true,'sort',trans('Sort'),'','btn-primary') }}{% endraw %}\u003c/li\u003e 再來是到 web.php 加入路由 : //排序、中介層:登入/管理員 Route::middleware('auth','admin')-\u003egroup(function() { Route::post('navbar-sortable','NavbarController@sort')-\u003ename('navbar.sort'); Route::get('/manage/navbar/sort', function () {return view('manage.navbar.sort');}); }); 做到這裡應該可以用滑鼠拖曳表格內的\u003ctd\u003e : drag\r接下來要做的就是拖曳後將排序資料寫入資料庫 ，在 NavbarController.php 中加入 : //拖曳排序 public function sort(Request $request) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '3') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } $navbars = Navbar::all(); foreach ($navbars as $navbar) { foreach ($request-\u003eorder as $order) { if ($order['id'] == $navbar-\u003eid) { $navbar-\u003eupdate(['sort' =\u003e $order['position']]); } } } $sort = DB::table('navbars')-\u003eselect('name','sort')-\u003eorderby('sort')-\u003eget(); Log::write_log('navbars',$sort,'排序'); return response('Update Successfully.', 200); } 在一次拖曳排序後重新整理","date":"2020-05-05","objectID":"/laravel-myweb-7/:3:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 7","uri":"/laravel-myweb-7/#2-拖曳排序"},{"categories":["CODE"],"content":"\r總結 使用 View composer 必須確定自己宣告的名稱。 View composer 也可以在 Provide 中使用。 拖曳排序使用了 JQuery中的 sortable 實現。 如果想在手機端觸控拖曳請自行加入jquery.ui.touch-punch.js。 叮叮結束🙋‍♂️ ","date":"2020-05-05","objectID":"/laravel-myweb-7/:4:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend","javascript","request","JQuery"],"title":"Laravel Backend Control Website - 7","uri":"/laravel-myweb-7/#總結"},{"categories":["CODE"],"content":"Laravel 導覽列管理 - Navbar Manage","date":"2020-05-03","objectID":"/laravel-myweb-6/","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/"},{"categories":["CODE"],"content":" Laravel 導覽列管理 - Navbar Manage ","date":"2020-05-03","objectID":"/laravel-myweb-6/:0:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/#"},{"categories":["CODE"],"content":"\r前言Hello 大家 ! 上一篇 明確地將前後台利用權限分開，如此一來，後台控制前台的網站已經漸漸有了雛型。而這篇將完成導覽列的管理，完成後即可從後台新增、修改前台所顯示的導覽列，並且使用拖曳的方式進行排序 (可在手機端使用)。 ","date":"2020-05-03","objectID":"/laravel-myweb-6/:1:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/#前言"},{"categories":["CODE"],"content":"\r1. 新增Controller、Model、Migration // 一次性建立 php artisan make:model Navbar -mcr ","date":"2020-05-03","objectID":"/laravel-myweb-6/:2:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/#1-新增controllermodelmigration"},{"categories":["CODE"],"content":"\r2. 修改Migration \u003c?php use Illuminate\\Support\\Facades\\Schema; use Illuminate\\Database\\Schema\\Blueprint; use Illuminate\\Database\\Migrations\\Migration; class CreateNavbarsTable extends Migration { public function up() { Schema::create('navbars', function (Blueprint $table) { $table-\u003ebigIncrements('id'); $table-\u003estring('name')-\u003ecomment('導覽名稱'); $table-\u003estring('link')-\u003enullable()-\u003ecomment('對外連結'); $table-\u003einteger('type')-\u003ecomment('類型'); $table-\u003einteger('sort')-\u003enullable()-\u003ecomment('排序'); $table-\u003eboolean('is_open')-\u003edefault(true)-\u003ecomment('是否開放'); $table-\u003etimestamps(); }); } public function down() { Schema::dropIfExists('navbars'); } } 然後寫入資料庫 : php artisan migrate ","date":"2020-05-03","objectID":"/laravel-myweb-6/:3:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/#2-修改migration"},{"categories":["CODE"],"content":"\r3. 修改Model \u003c?php namespace App; use Illuminate\\Database\\Eloquent\\Model; class Navbar extends Model { protected $table = 'navbars'; protected $primaryKey = 'id'; protected $fillable = [ \"name\", \"sort\", \"link\", \"type\", \"is_open\", ]; } ","date":"2020-05-03","objectID":"/laravel-myweb-6/:4:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/#3-修改model"},{"categories":["CODE"],"content":"\r4. 加入路由 Route::prefix('manage')-\u003emiddleware('auth','admin')-\u003egroup(function(){ Route::resource('member', 'MemberController'); Route::resource('navbar', 'NavbarController'); }); ","date":"2020-05-03","objectID":"/laravel-myweb-6/:5:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/#4-加入路由"},{"categories":["CODE"],"content":"\r5. 建立視圖 views/ ├── _layouts/ ├── _partials/ ├── auth/ └── manage / └── member └── navbar ├── create.blade.php ├── edit.blade.php └── index.blade.php ","date":"2020-05-03","objectID":"/laravel-myweb-6/:6:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/#5-建立視圖"},{"categories":["CODE"],"content":"\r6. 導覽列新增先建立導覽列管理首頁 index.blade.php : @extends('_layouts.manage.app') @section('title', trans('Navbar').trans('Manage')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ trans('Navbar').trans('Manage') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-inline\"\u003e \u003cli class=\"list-inline-item\"\u003e{% raw %}{{ App\\Button::Create() }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e \u003cdiv class=\"alert alert-warning\" role=\"alert\"\u003e 1. 新增頁面連結連結請照{% raw %}{{Request::root()}}{% endraw %}/article/導覽列名稱/選單名稱?頁面網址。\u003cbr\u003e 2. 外部連結請直接貼上整段網址即可。 \u003c/div\u003e \u003cdiv class=\"table-responsive\"\u003e \u003ctable id=\"data\" class=\"table table-hover table-bordered text-center\"\u003e \u003cthead\u003e \u003ctr class=\"table-info active\"\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Navbar').trans('Name') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Link') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Type') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Sort') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Is_open') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Action') }}{% endraw %}\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e @foreach ($all_navbars as $navbar) \u003ctr\u003e \u003ctd\u003e{% raw %}{{ $navbar-\u003ename }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $navbar-\u003elink }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{App\\Enum::type['navbar'][$navbar-\u003etype]}}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $navbar-\u003esort }}{% endraw %}\u003c/td\u003e \u003ctd\u003e\u003cfont color=\"{% raw %}{{App\\Enum::is_open['color'][$navbar-\u003eis_open]}}{% endraw %}\"\u003e\u003ci class=\"fas fa-{% raw %}{{App\\Enum::is_open['label'][$navbar-\u003eis_open]}}{% endraw %}\"\u003e\u003c/i\u003e\u003c/font\u003e\u003c/td\u003e \u003ctd\u003e \u003cform action=\"{% raw %}{{ route('navbar.edit',$navbar-\u003eid) }}{% endraw %}\" method=\"GET\"\u003e @csrf {% raw %}{{ App\\Button::edit($navbar-\u003eid) }}{% endraw %} \u003c/form\u003e \u003cform action=\"{% raw %}{{ route('navbar.destroy',$navbar-\u003eid) }}{% endraw %}\" method=\"POST\"\u003e @method('DELETE') @csrf {% raw %}{{ App\\Button::deleting($navbar-\u003eid) }}{% endraw %} \u003c/form\u003e \u003c/td\u003e \u003c/tr\u003e @endforeach \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e \u003c/div\u003e {% raw %}{{-- \u003cdiv class=\"card-footer pagination justify-content-center\"\u003e {!! $all_navbars-\u003elinks(\"pagination::bootstrap-4\") !!} \u003c/div\u003e --}}{% endraw %} \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e @endsection NavbarController.php : public function index() { $all_navbars = Navbar::all(); return view('manage.navbar.index',compact('all_navbars')); } create.blade.php : @extends('_layouts.manage.app') @section('title', trans('Navbar').trans('Create')) @section('content') \u003cdiv class=\"container\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cform action=\"{% raw %}{{ route('navbar.store') }}{% endraw %}\" method=\"POST\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ trans('Navbar').trans('Create') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-unstyled\"\u003e \u003cli\u003e{% raw %}{{ App\\Button::GoBack(route('navbar.index')) }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e @csrf \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"name\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Navbar').trans('Name') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput type=\"text\" class=\"form-control @error('name') is-invalid @enderror\" id=\"name\" name=\"name\" value=\"{% raw %}{{ old('name') }}{% endraw %}\" placeholder=\"{% raw %}{{ trans('Navbar').trans('Name') }}{% endraw %}\"\u003e @error('name') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"link\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Link') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput type=\"text\" class=\"form-control @error('link') is-invalid @enderror\" id=\"link\" name=\"link\" value=\"{% raw %}{{ old('link') }}{% endraw %}\" placeholder=\"{% raw %}{{ trans('Link') }}{% endraw %}\"\u003e @error('link') \u003cspan class=\"invalid-fe","date":"2020-05-03","objectID":"/laravel-myweb-6/:7:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/#6-導覽列新增"},{"categories":["CODE"],"content":"\r7. 導覽列修改edit.blade.php : @extends('_layouts.manage.app') @section('title', trans('Navbar').trans('Edit')) @section('content') \u003cdiv class=\"container\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ trans('Navbar').trans('Edit') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-unstyled\"\u003e \u003cli\u003e{% raw %}{{ App\\Button::GoBack(route('navbar.index')) }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e \u003cform method=\"POST\" action=\"{% raw %}{{ route('navbar.update' , $navbar-\u003eid) }}{% endraw %}\"\u003e @csrf @method('PUT') \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"name\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Navbar').trans('Name') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput id=\"name\" type=\"text\" class=\"form-control @error('name') is-invalid @enderror\" name=\"name\" value=\"{% raw %}{{ $navbar-\u003ename }}{% endraw %}\" required autocomplete=\"{% raw %}{{ trans('Page name') }}{% endraw %}\" autofocus\u003e @error('name') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"link\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Link') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput id=\"link\" type=\"text\" class=\"form-control @error('link') is-invalid @enderror\" name=\"link\" value=\"{% raw %}{{ $navbar-\u003elink }}{% endraw %}\" autocomplete=\"{% raw %}{{ trans('Link') }}{% endraw %}\" autofocus\u003e @error('link') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"type\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Type') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cselect class=\"form-control @error('type') is-invalid @enderror\" name='type' required aria-describedby=\"typeHelp\"\u003e @foreach(App\\Enum::type['navbar'] as $key =\u003e $value) @if ($key == $navbar-\u003etype) \u003coption value='{% raw %}{{ $key }}{% endraw %}' selected\u003e{% raw %}{{ $value }}{% endraw %}\u003c/option\u003e @else \u003coption value='{% raw %}{{ $key }}{% endraw %}'\u003e{% raw %}{{ $value }}{% endraw %}\u003c/option\u003e @endif @endforeach \u003c/select\u003e \u003cspan id=\"typeHelp\" class=\"form-text text-muted\"\u003e 導覽目錄：顯示選單目錄；\u003c/br\u003e 一般頁面：不顯示選單目錄，直接列出底下的頁面；\u003c/br\u003e \u003c/span\u003e @error('type') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"is_open\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Is_open') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cdiv class=\"custom-control custom-radio custom-control-inline\"\u003e \u003cinput class=\"custom-control-input\" type=\"radio\" name=\"is_open\" id=\"is_open1\" value=\"1\" {% raw %}{{ ($navbar-\u003eis_open==\"1\")? \"checked\" : \"\" }}{% endraw %}\u003e \u003clabel class=\"custom-control-label\" for=\"is_open1\"\u003e{% raw %}{{ trans('Yes') }}{% endraw %}\u003c/label\u003e \u003c/div\u003e \u003cdiv class=\"custom-control custom-radio custom-control-inline\"\u003e \u003cinput class=\"custom-control-input\" type=\"radio\" name=\"is_open\" id=\"is_open2\" value=\"0\" {% raw %}{{ ($navbar-\u003eis_open==\"0\")? \"checked\" : \"\" }}{% endraw %}\u003e \u003clabel class=\"custom-control-label\" for=\"is_open2\"\u003e{% raw %}{{ trans('No') }}{% endraw %}\u003c/label\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003cdiv class=\"col-md-4\"\u003e \u003cinput type=\"submit\" class=\"btn btn-primary\" value=\"送出\"\u003e \u003c/div\u003e \u003c/div\u003e \u003c/form\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e @endsection NavbarController.php : public function edit($id) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '3') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } $navbar = Navbar::where('id',$id)-\u003efirst(); return view('manage.navbar.edit',compact('navbar')); } public function update(Request $request, $id) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '3') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } $error = 0; $navbar = Navbar::where('id', $id)-\u003efirst(); $data = $this-\u003evalidate($request,","date":"2020-05-03","objectID":"/laravel-myweb-6/:8:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/#7-導覽列修改"},{"categories":["CODE"],"content":"\r8. 導覽列刪除NavbarController.php : public function destroy($id) { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '4') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } Navbar::destroy($id); return back()-\u003ewith('success', '刪除導覽列成功 !'); } ","date":"2020-05-03","objectID":"/laravel-myweb-6/:9:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/#8-導覽列刪除"},{"categories":["CODE"],"content":"\r9. 導覽列前台顯示web.php //在各視圖中可直接使用以下參數 View::composer(['*'], function ($view) { $navbars = App\\Navbar::where('is_open',1)-\u003eorderby('sort')-\u003eget(); $users = App\\User::all(); $view-\u003ewith('navbars',$navbars); $view-\u003ewith('users',$users); }); home/nav.blade.php : \u003cnav class=\"navbar navbar-expand-md navbar-light bg-white shadow-sm\"\u003e \u003cdiv class=\"container\"\u003e \u003ca class=\"navbar-brand\" href=\"{% raw %}{{ url('/') }}{% endraw %}\"\u003e {% raw %}{{ config('app.name', 'Laravel') }}{% endraw %} \u003c/a\u003e \u003cbutton class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"{% raw %}{{ trans('Toggle navigation') }}{% endraw %}\"\u003e \u003cspan class=\"navbar-toggler-icon\"\u003e\u003c/span\u003e \u003c/button\u003e \u003cdiv class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"\u003e \u003c!-- Left Side Of Navbar --\u003e \u003cul class=\"navbar-nav mr-auto\"\u003e @foreach ($navbars as $navbar) @switch($navbar-\u003etype) @case(1) \u003cli class=\"nav-item dropdown\"\u003e \u003ca class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\u003e {% raw %}{{ $navbar-\u003ename }}{% endraw %} \u003c/a\u003e \u003cdiv class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\"\u003e \u003c!-- 期待第12篇 --\u003e \u003c/div\u003e \u003c/li\u003e @break @case(2) \u003cli class=\"nav-item\" \u003e \u003ca class=\"nav-link\" href=\"{% raw %}{{ $navbar-\u003elink }}{% endraw %}\"\u003e{% raw %}{{ $navbar-\u003ename }}{% endraw %}\u003c/a\u003e \u003c/li\u003e @break @endswitch @endforeach \u003c/ul\u003e \u003c!-- Right Side Of Navbar --\u003e \u003cul class=\"navbar-nav ml-auto\"\u003e \u003c!-- Authentication Links --\u003e @guest \u003cli class=\"nav-item\"\u003e \u003ca class=\"nav-link\" href=\"{% raw %}{{ route('login') }}{% endraw %}\"\u003e{% raw %}{{ trans('Login') }}{% endraw %}\u003c/a\u003e \u003c/li\u003e @if (Route::has('register')) \u003cli class=\"nav-item\"\u003e \u003ca class=\"nav-link\" href=\"{% raw %}{{ route('register') }}{% endraw %}\"\u003e{% raw %}{{ trans('Register') }}{% endraw %}\u003c/a\u003e \u003c/li\u003e @endif @else @if (Auth::user()-\u003epermission != 0) \u003cli class=\"nav-item\"\u003e \u003ca class=\"nav-link\" href=\"{% raw %}{{ route('manage') }}{% endraw %}\"\u003e{% raw %}{{ trans('Backstage') }}{% endraw %}\u003c/a\u003e \u003c/li\u003e @endif \u003cli class=\"nav-item dropdown\"\u003e \u003ca id=\"navbarDropdown\" class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-pre\u003e {% raw %}{{ Auth::user()-\u003ename }}{% endraw %} \u003cspan class=\"caret\"\u003e\u003c/span\u003e \u003c/a\u003e \u003cdiv class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\"\u003e \u003ca class=\"dropdown-item\" href=\"{% raw %}{{ route('logout') }}{% endraw %}\" onclick=\"event.preventDefault(); document.getElementById('logout-form').submit();\"\u003e {% raw %}{{ trans('Logout') }}{% endraw %} \u003c/a\u003e \u003cform id=\"logout-form\" action=\"{% raw %}{{ route('logout') }}{% endraw %}\" method=\"POST\" style=\"display: none;\"\u003e @csrf \u003c/form\u003e \u003c/div\u003e \u003c/li\u003e @endguest \u003c/ul\u003e \u003c/div\u003e \u003c/div\u003e \u003c/nav\u003e ","date":"2020-05-03","objectID":"/laravel-myweb-6/:10:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/#9-導覽列前台顯示"},{"categories":["CODE"],"content":"\r10. 補充照著上面作，沒意外前台應該會顯示後台所新增的導覽列。 另外你必須在 Enum.php 新增相關參數如下 : // 是否開放(是=綠勾，否=紅叉) const is_open = [ 'color' =\u003e[ '0' =\u003e 'red', '1' =\u003e 'green', ], 'label'=\u003e[ '0' =\u003e 'times', '1' =\u003e 'check', ], ]; // 導覽列類型 const type =[ 'navbar' =\u003e [ '1' =\u003e '導覽目錄', '2' =\u003e '一般頁面', ], ]; 並且在 _layouts/manage/app.blade.php 新增 fontawesome ，不管你是要用CDN或者引入 : \u003clink rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.0/css/all.css\" integrity=\"sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ\" crossorigin=\"anonymous\"\u003e 另外關於翻譯請自行在zh-tw.json 或 zh-tw/myweb.php 加入。 下一篇會解答如何拖曳排序導覽列以及 View::composer。 叮叮，Hope it will help😋 ","date":"2020-05-03","objectID":"/laravel-myweb-6/:11:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 6","uri":"/laravel-myweb-6/#10-補充"},{"categories":["CODE"],"content":"Laravel 驗證、訊息、中介層  - Validation 、Message、Middleware","date":"2020-04-30","objectID":"/laravel-myweb-5/","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 5","uri":"/laravel-myweb-5/"},{"categories":["CODE"],"content":" Laravel 驗證、訊息、中介層 - Validation 、Message、Middleware ","date":"2020-04-30","objectID":"/laravel-myweb-5/:0:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 5","uri":"/laravel-myweb-5/#"},{"categories":["CODE"],"content":"\r前言第四篇 建立了會員系統，但其中有些東西並沒有交代的很清楚。 比如 資料驗證、新增、修改、刪除後的訊息以及 權限的利用，這篇將盡可能的解釋。 ","date":"2020-04-30","objectID":"/laravel-myweb-5/:1:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 5","uri":"/laravel-myweb-5/#前言"},{"categories":["CODE"],"content":"\r1. 資料送出後的訊息在 第四篇 可以看到儲存或刪除資料後都會有 : return back()-\u003ewith('success','會員新增成功 !'); 這行的意思是退回上一個位置並顯示成功的訊息框，訊息內容為會員新增成功。 相關文件 信息\r那這時會有個問題，阿怎麼沒跑出來 ? 這個簡單，因為還沒建立訊息框。\r首先要建立 views/_partials/message.blade.php : @if ($message = Session::get('success')) \u003cdiv class=\"alert alert-success alert-block text-center\"\u003e \u003cbutton type=\"button\" class=\"close\" data-dismiss=\"alert\"\u003e×\u003c/button\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/div\u003e @endif @if ($message = Session::get('error')) \u003cdiv class=\"alert alert-danger alert-block text-center\"\u003e \u003cbutton type=\"button\" class=\"close\" data-dismiss=\"alert\"\u003e×\u003c/button\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/div\u003e @endif @if ($message = Session::get('warning')) \u003cdiv class=\"alert alert-warning alert-block text-center\"\u003e \u003cbutton type=\"button\" class=\"close\" data-dismiss=\"alert\"\u003e×\u003c/button\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/div\u003e @endif @if ($message = Session::get('info')) \u003cdiv class=\"alert alert-info alert-block text-center\"\u003e \u003cbutton type=\"button\" class=\"close\" data-dismiss=\"alert\"\u003e×\u003c/button\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/div\u003e @endif @if ($message = Session::get('nodata')) \u003cdiv class=\"alert alert-info alert-block text-center\"\u003e \u003cbutton type=\"button\" class=\"close\" data-dismiss=\"alert\"\u003e×\u003c/button\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/div\u003e @endif @if ($errors-\u003eany()) \u003cdiv class=\"alert alert-danger text-center\"\u003e \u003cbutton type=\"button\" class=\"close\" data-dismiss=\"alert\"\u003e×\u003c/button\u003e {% raw %}{{ trans('Please check the form below for errors') }}{% endraw %} \u003c/div\u003e @endif 接著到 _layouts/manage/app.blade.php 中加入 : \u003c!DOCTYPE html\u003e ...略... \u003c/head\u003e \u003cbody\u003e \u003cdiv id=\"app\"\u003e @include('_partials.manage.nav') \u003cmain class=\"py-4\"\u003e @include('_partials.message') \u003c!-- 這行 --\u003e @yield('content') \u003c/main\u003e \u003c/div\u003e \u003c/body\u003e \u003c/html\u003e 搞定 ! 回到會員管理新增一筆資料看看 ! 沒意外新增成功上方會出現成功的訊息。 message\r","date":"2020-04-30","objectID":"/laravel-myweb-5/:2:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 5","uri":"/laravel-myweb-5/#1-資料送出後的訊息"},{"categories":["CODE"],"content":"\r2. 資料送出後的驗證想一想，會出現會員新增成功，就代表你通過了驗證。 以下是新增會員的驗證 : $data = $request-\u003evalidate([ 'name' =\u003e ['required', 'string', 'max:255'], 'email' =\u003e ['required', 'string', 'email', 'max:255', 'unique:users'], 'password' =\u003e ['required', 'string', 'min:1', 'confirmed'], 'permission' =\u003e ['required', 'string', 'max:5', 'min:0'], ]); 信息\r$request 的解釋請看這邊 簡單來說就是利用 request 來取得輸入資料，並且使用 validate 建立驗證。 可以作為條件的有這些。\r上面的信箱驗證就是使用了 必填欄位 、 字串 、格式為信箱、最大值255 、唯一:資料表為users 前面是驗證的設定，接下來看到頁面 create.blade.php 的信箱輸入 : \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"content\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('E-Mail Address') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput type=\"text\" class=\"form-control @error('email') is-invalid @enderror\" id=\"email\" name=\"email\" value=\"{% raw %}{{ old('email') }}{% endraw %}\" placeholder=\"{% raw %}{{ trans('E-Mail Address') }}{% endraw %}\"\u003e @error('email') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e 可以看到 input 中的 @error('email') is-invalid @enderror ，@error 可以判斷剛剛所設定的驗證是否存在，只要驗證有錯就會在 $message 顯示錯誤訊息。 搭配 Bootstrap 的 is-valid 以及 valid-feedback 來優化顯示錯誤訊息。 validation\rTip\r表單驗證其實可以自訂，不一定要使用 use Illuminate\\Http\\Request; 的 Request，以後再說😆\r","date":"2020-04-30","objectID":"/laravel-myweb-5/:3:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 5","uri":"/laravel-myweb-5/#2-資料送出後的驗證"},{"categories":["CODE"],"content":"\r3. 權限的使用例子既然 第四篇 建立了會員帳號的權限，以下就提出一些使用的例子。 比如我們規定 權限大於0 才能進入後台，這裡就要提到一下 中介層 / middleware。 信息\r中介層提供一個方便的機制來過濾進入應用程式的 HTTP 請求。\r之前我們透過 php artisan:make auth 的指令創建了名為 auth 的中介層 ./app/Http/Middleware/Authenticate.php 。 中介層名字定義在 ./app/Http/Kernel.php : \u003c?php namespace App\\Http; use Illuminate\\Foundation\\Http\\Kernel as HttpKernel; class Kernel extends HttpKernel { ...略... protected $routeMiddleware = [ 'admin' =\u003e \\App\\Http\\Middleware\\Admin::class, \u003c!-- 等等要加入的 --\u003e 'auth' =\u003e \\App\\Http\\Middleware\\Authenticate::class, ...略... ]; ...略... 可以看到 admin 和 auth 兩個中介層，admin 是等等要創立的，意義是管理員才能進入後台 ; 而 auth 代表是否有登入。 輸入以下指令生成中介層 Admin.php : php artisan make:middleware Admin 將內容改為 : \u003c?php namespace App\\Http\\Middleware; use Closure; class Admin { public function handle($request, Closure $next) { if (auth()-\u003euser()-\u003epermission != 0) { return $next($request); } return redirect('home'); } } 上面的意思就是如果登入權限不等於0才能存取路由，否則就要導回前台頁面。(auth用法) 接下來將中介層加入 Kernel.php 後就到 web.php 中加入中介層。 Route::get('/manage', function () {return view('manage.index');})-\u003emiddleware('auth','admin')-\u003ename('manage'); Route::prefix('manage')-\u003emiddleware('auth','admin')-\u003egroup(function(){ Route::resource('member', 'MemberController'); }); //必須登入且權限大於零才能進入後台 可以創立一個權限為 一般使用者 的試看看登入後進入後台。 再來的例子是帳號權限是否可以對會員帳號進行新增修改，請在 _partial/manage/nav.blade.php 做以下修改 : \u003cnav class=\"navbar navbar-expand-md navbar-light bg-white shadow-sm\"\u003e \u003cdiv class=\"container-fluid\"\u003e \u003ca class=\"navbar-brand\" href=\"{% raw %}{{ url('/manage') }}{% endraw %}\"\u003e {% raw %}{{ config('app.name', 'Laravel') }}{% endraw %} \u003c/a\u003e \u003cbutton class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"{% raw %}{{ __('Toggle navigation') }}{% endraw %}\"\u003e \u003cspan class=\"navbar-toggler-icon\"\u003e\u003c/span\u003e \u003c/button\u003e \u003cdiv class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"\u003e \u003c!-- Left Side Of Navbar --\u003e \u003cul class=\"navbar-nav mr-auto\"\u003e @if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003e '4') \u003cli class=\"nav-item\"\u003e \u003ca class=\"nav-link\" href=\"{% raw %}{{ route('member.index') }}{% endraw %}\"\u003e{% raw %}{{ __('Member').__('Manage') }}{% endraw %}\u003c/a\u003e \u003c/li\u003e @endif \u003c/ul\u003e \u003c!-- Right Side Of Navbar --\u003e \u003cul class=\"navbar-nav ml-auto\"\u003e \u003cli class=\"nav-item\"\u003e \u003ca class=\"nav-link\" href=\"{% raw %}{{ route('home') }}{% endraw %}\"\u003e{% raw %}{{ __('Fontstage') }}{% endraw %}\u003c/a\u003e \u003c/li\u003e \u003cli class=\"nav-item dropdown\"\u003e \u003ca id=\"navbarDropdown\" class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-pre\u003e {% raw %}{{ Auth::user()-\u003ename }}{% endraw %} \u003cspan class=\"caret\"\u003e\u003c/span\u003e \u003c/a\u003e \u003cdiv class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\"\u003e \u003ca class=\"dropdown-item\" href=\"{% raw %}{{ route('logout') }}{% endraw %}\" onclick=\"event.preventDefault(); document.getElementById('logout-form').submit();\"\u003e {% raw %}{{ trans('Logout') }}{% endraw %} \u003c/a\u003e \u003cform id=\"logout-form\" action=\"{% raw %}{{ route('logout') }}{% endraw %}\" method=\"POST\" style=\"display: none;\"\u003e @csrf \u003c/form\u003e \u003c/div\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/div\u003e \u003c/div\u003e \u003c/nav\u003e 可以看到其中的 : @if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003e '4') \u003cli class=\"nav-item\"\u003e \u003ca class=\"nav-link\" href=\"{% raw %}{{ route('member.index') }}{% endraw %}\"\u003e{% raw %}{{ __('Member').__('Manage') }}{% endraw %}\u003c/a\u003e \u003c/li\u003e @endif 上述表示權限不大於4無法進入會員管理的頁面。 另外你可以在Controller中加入 : public function create() { if (Auth::check() \u0026\u0026 Auth::user()-\u003epermission \u003c '5') { return back()-\u003ewith('warning', '權限不足以訪問該頁面 !'); } return view('manage.member.create'); } 上述表示權限小於5無法進入會員新增的頁面。 諸如此類的例子，就交給你自由發揮了😉 ","date":"2020-04-30","objectID":"/laravel-myweb-5/:4:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 5","uri":"/laravel-myweb-5/#3-權限的使用例子"},{"categories":["CODE"],"content":"\r4. 額外補充 php artisan make:controller MemberController --resource --resource 代表建立了一個包含CRUD的控制器。 函數 用途 index() 顯示資料（一般是列表） create() 建立新資料（通常是表單界面） store(Request $request) 儲存資料 show($id) 顯示某筆資料 edit($id) 編輯某筆資料（通常是表單界面） update(Request $request, $id) 更新某筆資料 destroy($id) 刪除某筆資料 如果要建立一個空的控制器 : php artisan make:controller MemberController 如果要同時建立 model、migration、controller --resource : php artisan make:model Member -mcr 參數 用途 -m 為model建立一個數據庫 -c 為model建立一個控制器 -r 為控制器加入 –resource 參數 可以用下列指令看到所有可用選項 : php artisan make:model --help Hope it will help ! ","date":"2020-04-30","objectID":"/laravel-myweb-5/:5:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 5","uri":"/laravel-myweb-5/#4-額外補充"},{"categories":["CODE"],"content":"Laravel 會員管理 / CRUD - Laravel member system / CRUD","date":"2020-04-29","objectID":"/laravel-myweb-4/","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 4","uri":"/laravel-myweb-4/"},{"categories":["CODE"],"content":" Laravel 會員管理 / CRUD - Laravel member system / CRUD ","date":"2020-04-29","objectID":"/laravel-myweb-4/:0:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 4","uri":"/laravel-myweb-4/#"},{"categories":["CODE"],"content":"\r前言第二篇提到將layout切成前後台，這次就要來製作會員系統，並且設定不同的權限。 ","date":"2020-04-29","objectID":"/laravel-myweb-4/:1:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 4","uri":"/laravel-myweb-4/#前言"},{"categories":["CODE"],"content":"\r1. 會員新增前台會員直接使用之前 php artisan make:auth 的註冊，後台的要另外建立，因為要設定權限的關係。 這裡 Model直接使用 app/User.php，然後建立 Controller。 php artisan make:controller MemberController --resource 指令成功之後可以在 app/Http/controllers底下看到剛剛建立的 member.php，並且裡面已經有基本的 CRUD function。 接下來因為要加入權限的關係，要打開 database/migrations/2014_10_12_000000_create_users_table.php，並將其改成以下: \u003c?php use Illuminate\\Support\\Facades\\Schema; use Illuminate\\Database\\Schema\\Blueprint; use Illuminate\\Database\\Migrations\\Migration; class CreateUsersTable extends Migration { public function up() { Schema::create('users', function (Blueprint $table) { $table-\u003ebigIncrements('id'); $table-\u003estring('name'); $table-\u003estring('email')-\u003eunique(); $table-\u003einteger('permission')-\u003edefault('0'); $table-\u003etimestamp('email_verified_at')-\u003enullable(); $table-\u003estring('password'); $table-\u003erememberToken(); $table-\u003etimestamps(); }); } public function down() { Schema::dropIfExists('users'); } } 信息\r順帶一提，up()跟down()分別 就是建立與刪除。\r接著由於 migration更新的關係，所以資料庫也要一起改變: php artisan migrate:fresh 有關更詳細的 Migration指令用法請詳閱 Migration。 再來因為有了新的資料庫欄位，所以要在 User.php 中加入剛剛新增的欄位。 \u003c?php namespace App; use Illuminate\\Notifications\\Notifiable; use Illuminate\\Contracts\\Auth\\MustVerifyEmail; use Illuminate\\Foundation\\Auth\\User as Authenticatable; class User extends Authenticatable implements MustVerifyEmail { use Notifiable; protected $fillable = [ 'name', 'email', 'password','permission', ]; protected $hidden = [ 'password', 'remember_token', ]; protected $casts = [ 'email_verified_at' =\u003e 'datetime', ]; } 做了這些前置作業之後，就可以到 Controllers/member.php 開始建立會員系統了。 先在在上方加入以下: use Illuminate\\Support\\Facades\\Auth; use Illuminate\\Support\\Facades\\Hash; use Illuminate\\Support\\Facades\\Validator; use Illuminate\\Support\\Facades\\DB; use App\\User; 這些都是等等會用到的指令，先將其引入。 在會員管理的首頁，要顯示出目前有的會員以及會員資料，所以在 index()我們將其改為 : public function index() { //從資料表 `users` 將所以資料取出，並進行分頁 $all_users = DB::table('users')-\u003epaginate(); //將取出的資料放在manage/member/index return view('manage.member.index',compact('all_users')); } 信息\r可以在分頁括弧中輸入想要一頁幾筆資料，預設是15筆。\r將 create() 改為 : // 目的就是顯示建立會員的頁面 return view('manage.member.create'); 這時候要先來建立會員新增的頁面，在 views 底下根據下表建立檔案及資料夾 : views/ ├── _layouts/ ├── _partials/ ├── auth/ └── manage / └── member ├── create.blade.php ├── edit.blade.php └── index.blade.php 接著在 ./routes/web.php中建立路由 : //因為之後還有其他功能要加入，所以先使用group Route::prefix('manage')-\u003egroup(function(){ Route::resource('member', 'MemberController'); }); 路由建立好後在 index.blade.php中加入 : @extends('_layouts.manage.app') @section('title', trans('Member').trans('Manage')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ trans('Member').trans('Manage') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-inline\"\u003e \u003cli class=\"list-inline-item\"\u003e{% raw %}{{ App\\Button::Create() }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e \u003cdiv class=\"table-responsive\"\u003e \u003ctable id=\"data\" class=\"table table-hover table-bordered text-center\"\u003e \u003cthead\u003e \u003ctr class=\"table-info active\"\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Name') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('E-Mail Address') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Permission') }}{% endraw %}\u003c/th\u003e \u003cth class=\"text-nowrap text-center\"\u003e{% raw %}{{ trans('Action') }}{% endraw %}\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e @foreach ($all_users as $user) \u003ctr\u003e \u003ctd\u003e{% raw %}{{ $user-\u003ename }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{ $user-\u003eemail }}{% endraw %}\u003c/td\u003e \u003ctd\u003e{% raw %}{{App\\Enum::permission[$user-\u003epermission]}}{% endraw %}\u003c/td\u003e \u003ctd\u003e \u003cform action=\"{% raw %}{{ route('member.edit',$user-\u003eid) }}{% endraw %}\" method=\"GET\"\u003e @csrf {% raw %}{{ App\\Button::edit($user-\u003eid) }}{% endraw %} \u003c/form\u003e \u003cform action=\"{% raw %}{{ route('member.destroy',$user-\u003eid) }}{% endraw %}\" method=\"POST\"\u003e @method('DELETE') @csrf {% raw %}{{ App\\Button::deleting($user-\u003eid) }}{% endraw %} \u003c/form\u003e \u003c/td\u003e \u003c/tr\u003e @endforeach \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv c","date":"2020-04-29","objectID":"/laravel-myweb-4/:2:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 4","uri":"/laravel-myweb-4/#1-會員新增"},{"categories":["CODE"],"content":"\r2. 會員修改萬事起頭難，接下來你會發現就是新增 blade 然後在 controller 設定操作。 在 controller 的 edit($id) 加入 : public function edit($id) { // 取出要修改的會員資料 $user = User::where('id',$id)-\u003efirst(); // 帶著會員資料進入修改頁面 return view('manage.member.edit',compact('user')); } 在 edit.blade.php 中加入 : @extends('_layouts.manage.app') @section('title', trans('Member').trans('Edit')) @section('content') \u003cdiv class=\"container-fluid\"\u003e \u003cdiv class=\"row justify-content-center\"\u003e \u003cdiv class=\"col-md-12\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e{% raw %}{{ trans('Member').trans('Edit') }}{% endraw %}\u003c/div\u003e \u003cdiv class=\"card-body\"\u003e \u003cul class=\"list-unstyled\"\u003e \u003cli\u003e{% raw %}{{ App\\Button::GoBack(route('member.index')) }}{% endraw %}\u003c/li\u003e \u003c/ul\u003e \u003cform method=\"POST\" action=\"{% raw %}{{ route('member.update' , $user-\u003eid) }}{% endraw %}\"\u003e @csrf @method('PUT') \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"email\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('E-Mail Address') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput id=\"email\" type=\"email\" class=\"form-control @error('email') is-invalid @enderror\" name=\"email\" value=\"{% raw %}{{ $user-\u003eemail }}{% endraw %}\" required autocomplete=\"email\" autofocus\u003e @error('email') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"name\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Name') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput id=\"name\" type=\"text\" class=\"form-control @error('name') is-invalid @enderror\" name=\"name\" value=\"{% raw %}{{ $user-\u003ename }}{% endraw %}\" required autocomplete=\"name\" autofocus\u003e @error('name') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"name\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Permission') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cselect class=\"form-control @error('permission') is-invalid @enderror\" id=\"permission\" name='permission' required\u003e @foreach(App\\Enum::permission as $key =\u003e $value) @if ($key == $user-\u003epermission) \u003coption value='{% raw %}{{ $key }}{% endraw %}' selected\u003e{% raw %}{{ $value }}{% endraw %}\u003c/option\u003e @else \u003coption value='{% raw %}{{ $key }}{% endraw %}'\u003e{% raw %}{{ $value }}{% endraw %}\u003c/option\u003e @endif @endforeach \u003c/select\u003e @error('permission') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"password\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Password') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput id=\"password\" type=\"password\" class=\"form-control @error('password') is-invalid @enderror\" name=\"password\" autocomplete=\"new-password\"\u003e @error('password') \u003cspan class=\"invalid-feedback\" role=\"alert\"\u003e \u003cstrong\u003e{% raw %}{{ $message }}{% endraw %}\u003c/strong\u003e \u003c/span\u003e @enderror \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003clabel for=\"password-confirm\" class=\"col-md-4 col-form-label text-md-right\"\u003e{% raw %}{{ trans('Confirm Password') }}{% endraw %}\u003c/label\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput id=\"password-confirm\" type=\"password\" class=\"form-control\" name=\"password_confirmation\" autocomplete=\"new-password\"\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv class=\"form-group row\"\u003e \u003cdiv class=\"col-md-6\"\u003e \u003cinput type=\"submit\" class=\"btn btn-primary\" value=\"送出\"\u003e \u003c/div\u003e \u003c/div\u003e \u003c/form\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e @endsection 回到會員管理首頁，看到剛剛新增的資料，點擊最右邊的修改按鈕進入修改頁面。 接著在 controller 中的 update() 加入 : public function update(Request $request, $id) { $error = 0; $user = User::where('id',$id)-\u003efirst(); // 如果有輸入密碼 if ($request-\u003efilled('password')) { $data = $this-\u003evalidate($request, [ 'name' =\u003e ['required', 'string', 'max:255'], 'email' =\u003e ['required', 'string', 'email', 'max:255'], 'password' =\u003e ['required', 'string', 'min:1', 'confirmed'], 'permission' =\u003e ['required', 'integer', 'max:5', 'min:0'],","date":"2020-04-29","objectID":"/laravel-myweb-4/:3:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 4","uri":"/laravel-myweb-4/#2-會員修改"},{"categories":["CODE"],"content":"\r3. 會員刪除這個部分最簡單，我們總是習慣捨去。 在 controller 中的 destroy() 中加入 : public function destroy($id) { User::destroy($id); return back()-\u003ewith('success', '會員刪除成功 !'); } 接著只要點擊會員管理首頁的刪除按鈕即可刪除該筆資料。 ","date":"2020-04-29","objectID":"/laravel-myweb-4/:4:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 4","uri":"/laravel-myweb-4/#3-會員刪除"},{"categories":["CODE"],"content":"\r結語我知道你在這個章節可能會看得不清楚，比如 為什麼要 return back()-\u003ewith('success', '會員刪除成功 !'); validate 是什麼 ? 等等諸如此類的問題將在下一章說明。 ","date":"2020-04-29","objectID":"/laravel-myweb-4/:5:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 4","uri":"/laravel-myweb-4/#結語"},{"categories":["CODE"],"content":"Laravel 路由、參數及按鈕設定 - Setting Routes、 Variables and Button","date":"2020-04-28","objectID":"/laravel-myweb-3/","series":["laravel-myweb"],"tags":["laravel","php","html","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 3","uri":"/laravel-myweb-3/"},{"categories":["CODE"],"content":" Laravel 路由、參數及按鈕設定 - Setting Routes、 Variables and Button ","date":"2020-04-28","objectID":"/laravel-myweb-3/:0:0","series":["laravel-myweb"],"tags":["laravel","php","html","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 3","uri":"/laravel-myweb-3/#"},{"categories":["CODE"],"content":"\r前言我們之所以看的到建立的畫面，都是以在 routes/web.php 文件定義路由開始的。可以通過在瀏覽器中輸入定義的路由URL來訪問 routes/web.php 中定義的路由。上一篇我們雖然建立了後台，可是並未創建路由。 在這篇將建立後台路由並且新增參數以便之後應用。 ","date":"2020-04-28","objectID":"/laravel-myweb-3/:1:0","series":["laravel-myweb"],"tags":["laravel","php","html","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 3","uri":"/laravel-myweb-3/#前言"},{"categories":["CODE"],"content":"\r1. 路由如果現在打開路由，會看到 : //網站首頁 Route::get('/', function () { return view('welcome'); }); //用戶認證 Auth::routes(); //登入後頁面 Route::get('/home', 'HomeController@index')-\u003ename('home'); 我們在之中加入 : Route::get('/manage', function () {return view('manage.index');})-\u003ename('manage'); 這段的意思是在 http://127.0.0.1/manage 看到 views/manage/index.blade.php 的內容，並將其命名為 manage。 之後只要使用 route('member') 就等同呼叫 http://127.0.0.1/manage。 ","date":"2020-04-28","objectID":"/laravel-myweb-3/:2:0","series":["laravel-myweb"],"tags":["laravel","php","html","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 3","uri":"/laravel-myweb-3/#1-路由"},{"categories":["CODE"],"content":"\r2. 參數有時候，在不同的頁面都會用到相同字串，比如說 下一篇 的會員管理，就會使用到權限的設定(新增、修改、刪除)。 如果多個頁面都要使用，何不先定義，之後再引入即可。在./app 底下建立 Enum.php 作為放參數的地方，並直接在裡面加上 : \u003c?php namespace App; use Illuminate\\Database\\Eloquent\\Model; class Enum extends Model { // 帳號權限 const permission = [ '0' =\u003e '一般使用者', '1' =\u003e '限閱', '2' =\u003e '閱讀、新增', '3' =\u003e '閱讀、新增、編輯', '4' =\u003e '閱讀、新增、編輯、刪除', '5' =\u003e '所有權限', ]; } 這樣一來，之後只要使用 App/Enum:permission 就可以得到這個陣列下的內容。 ","date":"2020-04-28","objectID":"/laravel-myweb-3/:3:0","series":["laravel-myweb"],"tags":["laravel","php","html","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 3","uri":"/laravel-myweb-3/#2-參數"},{"categories":["CODE"],"content":"\r3. 按鈕同上，之後一定會遇到要建立一堆按鈕的狀況，我們先把按鈕作成 Function 之後直接引入即可。 在./app 底下建立 Button.php 作為放按鈕的地方，並直接在裡面加上 : \u003c?php namespace App; use URL; use Illuminate\\Database\\Eloquent\\Model; class Button extends Model { public static function Detail($id) { $url = URL::full(); echo \"\u003cbutton type=\\\"submit\\\" class='btn btn-sm btn-secondary'\u003e\"; echo \"\u003ci class='fas fa-info-circle'\u003e\u003c/i\u003e \".trans('Detail'); echo \"\u003c/a\u003e\"; } public static function Deleting($id) { echo \"\u003cbutton type=\\\"submit\\\" class='btn btn-sm btn-danger btn-delete' onclick='return confirm(\\\"確認刪除?\\\")'\u003e\"; echo \"\u003ci class='fas fa-trash-alt'\u003e\u003c/i\u003e \".trans('Delete'); echo \"\u003c/button\u003e\"; } public static function Edit($id) { echo \"\u003cbutton type=\\\"submit\\\" class='btn btn-sm btn-success' formtarget='_blank'\u003e\"; echo \"\u003ci class='fas fa-pencil-alt'\u003e\u003c/i\u003e \" . trans('Edit'); echo \"\u003c/button\u003e\"; } public static function Create() { $url = URL::full(); echo \"\u003ca class='btn btn-sm btn-primary' href='{$url}/create'\u003e\"; echo \"\u003ci class='fas fa-plus'\u003e\u003c/i\u003e \".trans('Create'); echo \"\u003c/a\u003e\"; } public static function Reset() { echo \"\u003cp class='text-right'\u003e\"; echo \"\u003ca class='btn btn-sm btn-reset btn-danger' href='reset.php'\u003e\"; echo \"\u003ci class='fas fa-undo-alt'\u003e\u003c/i\u003e \".trans('Reset'); echo \"\u003c/a\u003e\"; echo \"\u003c/p\u003e\"; } public static function To($url=false,$to, $txt, $query=\"\", $class=\"btn-secondary\", $fas=\"list-ol\", $confirm=false) { $url = $url?URL::full():''; if ($confirm == true) { $confirm = 'onclick=\"return confirm(\\'確認刪除?\\')\"'; } if ($url) { echo \"\u003ca class='btn btn-sm {$class}' href='{$url}/{$to}/{$query}' {$confirm}\u003e\"; } else{ echo \"\u003ca class='btn btn-sm {$class}' href='{$to}/{$query}' {$confirm}\u003e\"; } echo \"\u003ci class='fas fa-{$fas}'\u003e\u003c/i\u003e {$txt}\"; echo \"\u003c/a\u003e\"; } public static function GoBack($url = \"#\") { $target_url = ($url) ? $url: URL::previous(); echo \"\u003ca class='btn btn-sm btn-default' href='{$target_url}'\u003e\"; echo \"\u003ci class='fas fa-arrow-left'\u003e\u003c/i\u003e \".trans('Previous'); echo \"\u003c/a\u003e\"; } } 這樣一來，之後只要使用 App\\Button::GoBack(route('manage')) 就可以回到後台首頁。 Hope it will help ! ","date":"2020-04-28","objectID":"/laravel-myweb-3/:4:0","series":["laravel-myweb"],"tags":["laravel","php","html","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 3","uri":"/laravel-myweb-3/#3-按鈕"},{"categories":["CODE"],"content":"Laravel 基本設置以及前後台公版 - Basic setup and template.","date":"2020-04-22","objectID":"/laravel-myweb-2/","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 2","uri":"/laravel-myweb-2/"},{"categories":["CODE"],"content":" Laravel 基本設置以及前後台公版 - Basic setup and template. ","date":"2020-04-22","objectID":"/laravel-myweb-2/:0:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 2","uri":"/laravel-myweb-2/#"},{"categories":["CODE"],"content":"\r前言上一篇進行了 Laravel 的建立以及基礎會員的設置，這篇將會提到如何設置時區、語言以及建立自己的頁面公版。 ","date":"2020-04-22","objectID":"/laravel-myweb-2/:1:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 2","uri":"/laravel-myweb-2/#前言"},{"categories":["CODE"],"content":"\r1. 基本設定打開 ./config/app.php ，這個檔案內就是對網站的基礎設定，語系、時間等等。有被 env 括弧起來的內容會採納 .env 檔案的內容。以下是一些我的設定，可以根據個人需求更改。 'timezone' =\u003e 'Asia/Taipei', // 時間 'locale' =\u003e 'zh-TW', // 語系 'fallback_locale' =\u003e 'zh-TW', ","date":"2020-04-22","objectID":"/laravel-myweb-2/:2:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 2","uri":"/laravel-myweb-2/#1-基本設定"},{"categories":["CODE"],"content":"\r2. 語言設置如果根據上面進行更改後，在上一篇建立的會員設置會發現還是英文，這是因為他並沒有找到 zh-TW 的語言包。這時候要到 ./resources/lang 底下建立 zh-TW 的資料夾，並將 語言包 放到底下，重新整理後就會翻譯成繁體中文了。緊接著在同個資料夾底下建立一個 myweb.php 做為日後要翻譯的繁中語言包。 Tip\r這邊說一個比較偷吃步的方法，就是在 lang 資料夾底下直接建立 zh-TW.json ，將所有要翻譯的文字填進去，之後只要用 {{ __('language') }} 即可。缺點是之後再做語言切換會有部分問題，以及不美觀和分類問題。優點就是網站只需要一種語言的話會很方便!\r","date":"2020-04-22","objectID":"/laravel-myweb-2/:3:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 2","uri":"/laravel-myweb-2/#2-語言設置"},{"categories":["CODE"],"content":"\r3. 頁面公版製作頁面公版的好處就是要創建新的頁面時可以直接套用公版，省去時間及麻煩。以下會將前台及後台分開。 首先介紹你的頁面會被放置在 ./resources/views 底下，由於之前有建立過會員，所以裡面已經有一些頁面及資料夾存在。這時候在 先把layouts改名成 _layouts 並在 底下建立 manage 和 home 兩個資料夾，並將 app.blade.php 複製進兩個資料夾。 Info\r順帶一提，之後要建立頁面要檔案名稱要固定是 頁面名稱.blade.php\r然後打開其中的一個 app.blade.php ，把 \u003cnav\u003e...\u003c/nav\u003e 整段程式碼剪下並在 views 底下建立一個 _partials 資料夾，接著在 _partials 底下建立 manage 和 home 兩個資料夾，並在底下各建立一個 nav.blade.php 的視圖。最後將剛剛剪下的程式碼貼進去，資料夾內容會長得跟下圖一樣。 views\r如此一來，我們只要引入 nav 至 app.blade.php母版即可。 \u003cbody\u003e \u003cdiv id=\"app\"\u003e @include('_partials.home.nav') \u003cmain class=\"py-4\"\u003e @yield('content') \u003c/main\u003e \u003c/div\u003e \u003c/body\u003e 緊接著到 http://127.0.0.1:8000/login 頁面發現報錯，View [layouts.app] not found. 是因為剛剛將資料的路徑更動，只要將auth/login.blade.php 中的 @extends('layouts.app') 改成 @extends('_layouts.home.app') 即可。 其他頁面也是一樣的方法，之後創新頁面只要先把下面貼上，再新增你需要的元素即可。 @extends('_layouts.home.app') @section('content') 你要的內容 @endsection 就拿 welcome.blade.php 來測試，把內容改成 @extends('_layouts.home.app') @section('content') \u003cdiv class=\"container\"\u003e \u003cdiv class=\"card\"\u003e \u003cdiv class=\"card-header\"\u003e 測試 \u003c/div\u003e \u003cdiv class=\"card-body\"\u003e TEST \u003c/div\u003e \u003c/div\u003e \u003c/div\u003e @endsection 呈現的效果如下圖 example\r","date":"2020-04-22","objectID":"/laravel-myweb-2/:4:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 2","uri":"/laravel-myweb-2/#3-頁面公版"},{"categories":["CODE"],"content":"\r結語乾淨的版面😊 ","date":"2020-04-22","objectID":"/laravel-myweb-2/:5:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 2","uri":"/laravel-myweb-2/#結語"},{"categories":["EXECUTION"],"content":"如何在markdown中顯示雙大括號 - How to translate double big parantheses in markdown","date":"2020-04-22","objectID":"/translate-big-parantheses-markdown/","series":null,"tags":["jekyll","liquid","markdown"],"title":"Translate Big Parantheses in Markdown","uri":"/translate-big-parantheses-markdown/"},{"categories":["EXECUTION"],"content":" 如何在markdown中顯示雙大括號 - How to translate double big parantheses in markdown ","date":"2020-04-22","objectID":"/translate-big-parantheses-markdown/:0:0","series":null,"tags":["jekyll","liquid","markdown"],"title":"Translate Big Parantheses in Markdown","uri":"/translate-big-parantheses-markdown/#"},{"categories":["EXECUTION"],"content":"\r前言由於jekyll 使用liquid 的關係，在 POST 中使用 {% raw %} {{ }} {% endraw %} 會無法正常顯示。 ","date":"2020-04-22","objectID":"/translate-big-parantheses-markdown/:1:0","series":null,"tags":["jekyll","liquid","markdown"],"title":"Translate Big Parantheses in Markdown","uri":"/translate-big-parantheses-markdown/#前言"},{"categories":["EXECUTION"],"content":"\r解決 {{ openTag }} raw %} {% raw %} {{ 加入raw即可 }} {% endraw %} {{ openTag }} endraw %} Info\r之後補充如何顯示 {% raw %} {% raw %} {% endraw %}\rHope it will help ! ","date":"2020-04-22","objectID":"/translate-big-parantheses-markdown/:2:0","series":null,"tags":["jekyll","liquid","markdown"],"title":"Translate Big Parantheses in Markdown","uri":"/translate-big-parantheses-markdown/#解決"},{"categories":["CODE"],"content":"Laravel 網站設置和預計設計目標 - Website settings and expected design goals","date":"2020-04-21","objectID":"/laravel-myweb-1/","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 1","uri":"/laravel-myweb-1/"},{"categories":["CODE"],"content":" Laravel 網站設置和預計設計目標 - Website settings and expected design goals ","date":"2020-04-21","objectID":"/laravel-myweb-1/:0:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 1","uri":"/laravel-myweb-1/#"},{"categories":["CODE"],"content":"\r前言前陣子開始接觸 Laravel ，算是第一個接觸的MVC框架 ，學了一段時間後就想做一個小品當作練習。這個練習的目的就是讓我熟悉 Model、View、Controller 三者之間的愛恨糾葛😂。不會講得很細，就是分享我遇到的問題以及解決的方法。 ","date":"2020-04-21","objectID":"/laravel-myweb-1/:1:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 1","uri":"/laravel-myweb-1/#前言"},{"categories":["CODE"],"content":"\r使用工具 工具 Laravel PHP MySQL 版本 5.8 7.2 5.7 ","date":"2020-04-21","objectID":"/laravel-myweb-1/:2:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 1","uri":"/laravel-myweb-1/#使用工具"},{"categories":["CODE"],"content":"\r目標完成一個後端控制前台發布文章、導覽列、消息、輪播、訊息的網站。 ","date":"2020-04-21","objectID":"/laravel-myweb-1/:3:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 1","uri":"/laravel-myweb-1/#目標"},{"categories":["CODE"],"content":"\r成品圖\rfontend\rbackend\r","date":"2020-04-21","objectID":"/laravel-myweb-1/:4:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 1","uri":"/laravel-myweb-1/#成品圖"},{"categories":["CODE"],"content":"\r設置這次使用的是5.8 版本的Laravel ，所以先建立一個資料夾 myweb 。 建立Laravel 5.8 composer create-project --prefer-dist laravel/laravel myweb \"5.8.*\" 之後滑進去 cd myweb 注意\r請自行安裝所需要的環境及套件，Composer 和 xampp 等等\r之後在 MySQL 建立資料庫 myweb ， 並在 .env 中將資料庫相關資料填上。 DB_CONNECTION=mysql DB_HOST=127.0.0.1 DB_PORT=3306 DB_DATABASE=myweb DB_USERNAME=username DB_PASSWORD=password 資料庫設定完後，Laravel 創建完成後 php artisan make:auth，這一步的目的是建立基本的用戶認證，如果之後你要自己建立也行，問題不大。 接著在資料庫建立資料表，運行php artisan migrate，沒意外應該是會順利成功。 你到phpmyadmin的myweb資料庫應該可以看到建立好的三個資料表。 最後執行 php artisan serve 開始運行 laravel ，並到 網址http://127.0.0.1:8000/，成功看到下圖就沒事可以去看個Laravel Document 壓壓驚了。 laravel\r❤❤ 貼心小提醒，記得版控ㄛ ❤❤ ","date":"2020-04-21","objectID":"/laravel-myweb-1/:5:0","series":["laravel-myweb"],"tags":["laravel","php","html","javascript","css","bootstrap","backend"],"title":"Laravel Backend Control Website - 1","uri":"/laravel-myweb-1/#設置"},{"categories":["EXECUTION"],"content":"解決Jekyll serve 無法關閉  - Jekyll serve service worker","date":"2020-04-18","objectID":"/stop-jekyll-serve/","series":null,"tags":["jekyll","cookie"],"title":"Stop Jekyll serve (127.0.0.1:4000)","uri":"/stop-jekyll-serve/"},{"categories":["EXECUTION"],"content":" 解決Jekyll serve 無法關閉 - Jekyll serve service worker ","date":"2020-04-18","objectID":"/stop-jekyll-serve/:0:0","series":null,"tags":["jekyll","cookie"],"title":"Stop Jekyll serve (127.0.0.1:4000)","uri":"/stop-jekyll-serve/#"},{"categories":["EXECUTION"],"content":"\r前言一般來講我們關閉本地的jekyll serve 都是使用 ctrl + c ，可是當你下次再次運行 jekyll serve 時發現上次的還在 。 ","date":"2020-04-18","objectID":"/stop-jekyll-serve/:1:0","series":null,"tags":["jekyll","cookie"],"title":"Stop Jekyll serve (127.0.0.1:4000)","uri":"/stop-jekyll-serve/#前言"},{"categories":["EXECUTION"],"content":"\r解決這時只要把127.0.0.1中的 Service Workers Cookie 刪除即可，以GOOGLE瀏覽器為例，目標就是下圖紅框處的Cookie。 Basic configuration preview\r如果你想了解更多 Hope it will help! ","date":"2020-04-18","objectID":"/stop-jekyll-serve/:2:0","series":null,"tags":["jekyll","cookie"],"title":"Stop Jekyll serve (127.0.0.1:4000)","uri":"/stop-jekyll-serve/#解決"},{"categories":["CODE"],"content":"Allow the attribute as you want.","date":"2020-04-13","objectID":"/ckeditor-htmlpurifier-allow-attribute/","series":null,"tags":["htmlpurifier","ckeditor","php","html"],"title":"Ckeditor + Htmlpurifier allow attribute","uri":"/ckeditor-htmlpurifier-allow-attribute/"},{"categories":["CODE"],"content":" Allow the attribute as you want. I created a page manager in the backstage, and it edit by the ckeditor. Also, I use Htmlpurifier to defense the xss injection. But Htmlpurifier will block the attribute like Bootstrap tabs plugins. So the way I used to allow attribute while using Htmlpurifier. Here is the document. For example, I want to purify the html below. \u003cdiv class=\"bootstrap-tabs\" data-tab-set-title=\"Program Introduction\"\u003e\u003c/div\u003e If you use the simple purifier like this, function xss_filter($content){ $purifier = new HTMLPurifier($config); $cleanContent = $purifier-\u003epurify($content); return $cleanContent; } You will get the output below, \u003cdiv class=\"bootstrap-tabs\"\u003e\u003c/div\u003e The data-tab-set-title is disabled. So, add the code below and you will get what you want. $config = HTMLPurifier_Config::createDefault(); $def = $config-\u003egetHTMLDefinition(true); $def-\u003eaddAttribute('div', 'data-tab-set-title', 'CDATA'); Hope it will help ! ","date":"2020-04-13","objectID":"/ckeditor-htmlpurifier-allow-attribute/:0:0","series":null,"tags":["htmlpurifier","ckeditor","php","html"],"title":"Ckeditor + Htmlpurifier allow attribute","uri":"/ckeditor-htmlpurifier-allow-attribute/#"},{"categories":null,"content":"\r分享一些遇到的問題及解決方法 中指a夢\r","date":"2016-08-24","objectID":"/about/:0:0","series":null,"tags":null,"title":"About me","uri":"/about/#分享一些遇到的問題及解決方法"}]